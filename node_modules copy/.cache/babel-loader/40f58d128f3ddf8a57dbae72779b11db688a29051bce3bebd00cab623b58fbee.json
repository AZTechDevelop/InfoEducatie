{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andreea\\\\infoeducatie\\\\src\\\\Laborator\\\\laborator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { SketchPicker } from 'react-color';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreatorPaleta() {\n  _s();\n  const [palete, setPalete] = useState([]);\n  const [culori, setCulori] = useState([]);\n  const [culoareSelectata, setCuloareSelectata] = useState('#ffffff');\n  const [numePaleta, setNumePaleta] = useState('');\n  const [editarePaletaId, setEditarePaletaId] = useState(null);\n  const [paletaAfisata, setPaletaAfisata] = useState(null);\n  useEffect(() => {\n    const paleteSalvate = JSON.parse(localStorage.getItem('paleteCulori'));\n    if (paleteSalvate) {\n      setPalete(paleteSalvate);\n    }\n  }, []);\n  const schimbaCuloare = color => {\n    setCuloareSelectata(color.hex);\n  };\n  const adaugaCuloare = () => {\n    if (!culori.includes(culoareSelectata)) {\n      setCulori([...culori, culoareSelectata]);\n    }\n  };\n  const eliminaCuloare = culoareDeEliminat => {\n    setCulori(culori.filter(culoare => culoare !== culoareDeEliminat));\n  };\n  const salveazaPaleta = () => {\n    if (numePaleta.trim() === \"\") {\n      alert('Te rog să introduci un nume pentru paleta.');\n      return;\n    }\n    const existaDeja = palete.some(paleta => paleta.nume === numePaleta && paleta.id !== editarePaletaId);\n    if (existaDeja) {\n      alert('O paletă cu acest nume există deja. Te rog alege un nume diferit.');\n      return;\n    }\n    const paleteActualizate = palete.filter(paleta => paleta.id !== editarePaletaId);\n    const nouaPaleta = {\n      id: editarePaletaId || Date.now(),\n      nume: numePaleta,\n      culori\n    };\n    setPalete([...paleteActualizate, nouaPaleta]);\n    localStorage.setItem('paleteCulori', JSON.stringify([...paleteActualizate, nouaPaleta]));\n    resetarePaleta();\n  };\n  const incarcaPaleta = paleta => {\n    setCulori(paleta.culori);\n    setNumePaleta(paleta.nume);\n    setEditarePaletaId(paleta.id);\n  };\n  const resetarePaleta = () => {\n    setCulori([]);\n    setNumePaleta('');\n    setEditarePaletaId(null);\n  };\n  const stergePaleta = id => {\n    const paleteActualizate = palete.filter(paleta => paleta.id !== id);\n    setPalete(paleteActualizate);\n    localStorage.setItem('paleteCulori', JSON.stringify(paleteActualizate));\n    resetarePaleta();\n  };\n  const afiseazaPaleta = paleta => {\n    alert(`Culorile din paleta '${paleta.nume}':\\n${paleta.culori.join('\\n')}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-100 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 flex flex-col items-center justify-center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 flex flex-col items-center justify-start overflow-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-bold py-2\",\n        children: \"Palete Salvate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), palete.map((paleta, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between bg-purple-300 text-white py-1 px-3 rounded w-full mb-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => incarcaPaleta(paleta),\n          className: \"cursor-pointer\",\n          children: paleta.nume\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setPaletaAfisata(paleta),\n            className: \"ml-4 bg-blue-500 px-2 py-1 rounded\",\n            children: \"Afi\\u0219eaz\\u0103\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => stergePaleta(paleta.id),\n            className: \"ml-4 bg-red-500 px-2 py-1 rounded\",\n            children: \"\\u0218terge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)), paletaAfisata && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-bold\",\n          children: [\"Culori \\xEEn paleta '\", paletaAfisata.nume, \"':\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap\",\n          children: paletaAfisata.culori.map((culoare, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-2 w-16 h-16\",\n            style: {\n              backgroundColor: culoare\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(CreatorPaleta, \"N4fyiTS2XYfWiIHn84vv6HyYhU4=\");\n_c = CreatorPaleta;\nexport default CreatorPaleta;\nvar _c;\n$RefreshReg$(_c, \"CreatorPaleta\");","map":{"version":3,"names":["React","useState","useEffect","SketchPicker","jsxDEV","_jsxDEV","CreatorPaleta","_s","palete","setPalete","culori","setCulori","culoareSelectata","setCuloareSelectata","numePaleta","setNumePaleta","editarePaletaId","setEditarePaletaId","paletaAfisata","setPaletaAfisata","paleteSalvate","JSON","parse","localStorage","getItem","schimbaCuloare","color","hex","adaugaCuloare","includes","eliminaCuloare","culoareDeEliminat","filter","culoare","salveazaPaleta","trim","alert","existaDeja","some","paleta","nume","id","paleteActualizate","nouaPaleta","Date","now","setItem","stringify","resetarePaleta","incarcaPaleta","stergePaleta","afiseazaPaleta","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","style","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/Andreea/infoeducatie/src/Laborator/laborator.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { SketchPicker } from 'react-color';\r\n\r\nfunction CreatorPaleta() {\r\n    const [palete, setPalete] = useState([]);\r\n    const [culori, setCulori] = useState([]);\r\n    const [culoareSelectata, setCuloareSelectata] = useState('#ffffff');\r\n    const [numePaleta, setNumePaleta] = useState('');\r\n    const [editarePaletaId, setEditarePaletaId] = useState(null);\r\n    const [paletaAfisata, setPaletaAfisata] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const paleteSalvate = JSON.parse(localStorage.getItem('paleteCulori'));\r\n        if (paleteSalvate) {\r\n            setPalete(paleteSalvate);\r\n        }\r\n    }, []);\r\n\r\n    const schimbaCuloare = (color) => {\r\n        setCuloareSelectata(color.hex);\r\n    };\r\n\r\n    const adaugaCuloare = () => {\r\n        if (!culori.includes(culoareSelectata)) {\r\n            setCulori([...culori, culoareSelectata]);\r\n        }\r\n    };\r\n\r\n    const eliminaCuloare = (culoareDeEliminat) => {\r\n        setCulori(culori.filter(culoare => culoare !== culoareDeEliminat));\r\n    };\r\n\r\n    const salveazaPaleta = () => {\r\n        if (numePaleta.trim() === \"\") {\r\n            alert('Te rog să introduci un nume pentru paleta.');\r\n            return;\r\n        }\r\n        const existaDeja = palete.some(paleta => paleta.nume === numePaleta && paleta.id !== editarePaletaId);\r\n        if (existaDeja) {\r\n            alert('O paletă cu acest nume există deja. Te rog alege un nume diferit.');\r\n            return;\r\n        }\r\n        const paleteActualizate = palete.filter(paleta => paleta.id !== editarePaletaId);\r\n        const nouaPaleta = { id: editarePaletaId || Date.now(), nume: numePaleta, culori };\r\n        setPalete([...paleteActualizate, nouaPaleta]);\r\n        localStorage.setItem('paleteCulori', JSON.stringify([...paleteActualizate, nouaPaleta]));\r\n        resetarePaleta();\r\n    };\r\n    \r\n\r\n    const incarcaPaleta = (paleta) => {\r\n        setCulori(paleta.culori);\r\n        setNumePaleta(paleta.nume);\r\n        setEditarePaletaId(paleta.id);\r\n    };\r\n\r\n    const resetarePaleta = () => {\r\n        setCulori([]);\r\n        setNumePaleta('');\r\n        setEditarePaletaId(null);\r\n    };\r\n\r\n    const stergePaleta = (id) => {\r\n        const paleteActualizate = palete.filter(paleta => paleta.id !== id);\r\n        setPalete(paleteActualizate);\r\n        localStorage.setItem('paleteCulori', JSON.stringify(paleteActualizate));\r\n        resetarePaleta();\r\n    };\r\n    const afiseazaPaleta = (paleta) => {\r\n        alert(`Culorile din paleta '${paleta.nume}':\\n${paleta.culori.join('\\n')}`);\r\n    };\r\n    return (\r\n        <div className=\"flex h-screen bg-gray-100 p-4\">\r\n            <div className=\"w-1/2 flex flex-col items-center justify-center\">\r\n                {/* Restul codului pentru partea de editare a paletei */}\r\n            </div>\r\n            <div className=\"w-1/2 flex flex-col items-center justify-start overflow-auto\">\r\n                <h2 className=\"text-lg font-bold py-2\">Palete Salvate</h2>\r\n                {palete.map((paleta, index) => (\r\n                    <div key={index} className=\"flex items-center justify-between bg-purple-300 text-white py-1 px-3 rounded w-full mb-1\">\r\n                        <span onClick={() => incarcaPaleta(paleta)} className=\"cursor-pointer\">{paleta.nume}</span>\r\n                        <div>\r\n                            <button onClick={() => setPaletaAfisata(paleta)} className=\"ml-4 bg-blue-500 px-2 py-1 rounded\">Afișează</button>\r\n                            <button onClick={() => stergePaleta(paleta.id)} className=\"ml-4 bg-red-500 px-2 py-1 rounded\">Șterge</button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                {paletaAfisata && (\r\n                    <div className=\"mt-4\">\r\n                        <h3 className=\"text-lg font-bold\">Culori în paleta '{paletaAfisata.nume}':</h3>\r\n                        <div className=\"flex flex-wrap\">\r\n                            {paletaAfisata.culori.map((culoare, index) => (\r\n                                <div key={index} className=\"m-2 w-16 h-16\" style={{ backgroundColor: culoare }}></div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default CreatorPaleta;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}