{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andreea\\\\infoeducatie\\\\src\\\\Teorie\\\\componente\\\\RoataComplementaraImpartita.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoataCulorilorComplementareImpartite() {\n  _s();\n  const [segmentSelectat, setSegmentSelectat] = useState(null);\n  const culori = [{\n    principal: 'hsl(0, 80%, 50%)',\n    adiacent1: 'hsl(30, 80%, 50%)',\n    adiacent2: 'hsl(330, 80%, 50%)'\n  },\n  // Roșu și complementarele împărțite\n  {\n    principal: 'hsl(120, 80%, 50%)',\n    adiacent1: 'hsl(90, 80%, 50%)',\n    adiacent2: 'hsl(150, 80%, 50%)'\n  },\n  // Verde\n  {\n    principal: 'hsl(240, 80%, 50%)',\n    adiacent1: 'hsl(210, 80%, 50%)',\n    adiacent2: 'hsl(270, 80%, 50%)'\n  },\n  // Albastru\n  {\n    principal: 'hsl(60, 80%, 50%)',\n    adiacent1: 'hsl(30, 80%, 50%)',\n    adiacent2: 'hsl(90, 80%, 50%)'\n  } // Galben\n  ];\n  const totalSegments = culori.length * 3;\n  const calculCoordonate = (index, total) => {\n    const angle = index / total * Math.PI * 2 - Math.PI / 2;\n    const x = Math.cos(angle);\n    const y = Math.sin(angle);\n    return [x, y];\n  };\n  const getPathData = index => {\n    const start = calculCoordonate(index, totalSegments);\n    const end = calculCoordonate(index + 1, totalSegments);\n    return `M0,0 L${start[0] * 16},${start[1] * 16} A16,16 0 0,1 ${end[0] * 16},${end[1] * 16}Z`;\n  };\n  const ajusteazaCuloare = index => {\n    const groupIndex = Math.floor(index / 3);\n    if (segmentSelectat === null || groupIndex === segmentSelectat) {\n      const colorIndex = index % 3;\n      const keys = ['principal', 'adiacent1', 'adiacent2'];\n      return culori[groupIndex][keys[colorIndex]];\n    }\n    return 'grey';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold my-4\",\n      children: \"Roata Culorilor Complementare \\xCEmp\\u0103r\\u021Bite\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: \"-18 -18 36 36\",\n      width: \"300px\",\n      height: \"300px\",\n      children: Array.from({\n        length: totalSegments\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"path\", {\n        d: getPathData(index),\n        fill: ajusteazaCuloare(index),\n        onClick: () => setSegmentSelectat(Math.floor(index / 3)),\n        style: {\n          cursor: 'pointer'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4\",\n      children: \"Selecta\\u021Bi un segment pentru a eviden\\u021Bia culorile complementare \\xEEmp\\u0103r\\u021Bite.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(RoataCulorilorComplementareImpartite, \"pAZfw1FyaL+UMNFudMOje7Al4f8=\");\n_c = RoataCulorilorComplementareImpartite;\nexport default RoataCulorilorComplementareImpartite;\nvar _c;\n$RefreshReg$(_c, \"RoataCulorilorComplementareImpartite\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RoataCulorilorComplementareImpartite","_s","segmentSelectat","setSegmentSelectat","culori","principal","adiacent1","adiacent2","totalSegments","length","calculCoordonate","index","total","angle","Math","PI","x","cos","y","sin","getPathData","start","end","ajusteazaCuloare","groupIndex","floor","colorIndex","keys","className","children","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","width","height","Array","from","map","_","d","fill","onClick","style","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Andreea/infoeducatie/src/Teorie/componente/RoataComplementaraImpartita.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction RoataCulorilorComplementareImpartite() {\r\n    const [segmentSelectat, setSegmentSelectat] = useState(null);\r\n\r\n    const culori = [\r\n        { principal: 'hsl(0, 80%, 50%)', adiacent1: 'hsl(30, 80%, 50%)', adiacent2: 'hsl(330, 80%, 50%)' }, // Roșu și complementarele împărțite\r\n        { principal: 'hsl(120, 80%, 50%)', adiacent1: 'hsl(90, 80%, 50%)', adiacent2: 'hsl(150, 80%, 50%)' }, // Verde\r\n        { principal: 'hsl(240, 80%, 50%)', adiacent1: 'hsl(210, 80%, 50%)', adiacent2: 'hsl(270, 80%, 50%)' }, // Albastru\r\n        { principal: 'hsl(60, 80%, 50%)', adiacent1: 'hsl(30, 80%, 50%)', adiacent2: 'hsl(90, 80%, 50%)' }, // Galben\r\n    ];\r\n\r\n    const totalSegments = culori.length * 3;\r\n\r\n    const calculCoordonate = (index, total) => {\r\n        const angle = (index / total) * Math.PI * 2 - Math.PI / 2;\r\n        const x = Math.cos(angle);\r\n        const y = Math.sin(angle);\r\n        return [x, y];\r\n    };\r\n\r\n    const getPathData = (index) => {\r\n        const start = calculCoordonate(index, totalSegments);\r\n        const end = calculCoordonate(index + 1, totalSegments);\r\n        return `M0,0 L${start[0] * 16},${start[1] * 16} A16,16 0 0,1 ${end[0] * 16},${end[1] * 16}Z`;\r\n    };\r\n\r\n    const ajusteazaCuloare = (index) => {\r\n        const groupIndex = Math.floor(index / 3);\r\n        if (segmentSelectat === null || groupIndex === segmentSelectat) {\r\n            const colorIndex = index % 3;\r\n            const keys = ['principal', 'adiacent1', 'adiacent2'];\r\n            return culori[groupIndex][keys[colorIndex]];\r\n        }\r\n        return 'grey';\r\n    };\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h1 className=\"text-2xl font-bold my-4\">Roata Culorilor Complementare Împărțite</h1>\r\n            <svg viewBox=\"-18 -18 36 36\" width=\"300px\" height=\"300px\">\r\n                {Array.from({ length: totalSegments }).map((_, index) => (\r\n                    <path\r\n                        key={index}\r\n                        d={getPathData(index)}\r\n                        fill={ajusteazaCuloare(index)}\r\n                        onClick={() => setSegmentSelectat(Math.floor(index / 3))}\r\n                        style={{ cursor: 'pointer' }}\r\n                    />\r\n                ))}\r\n            </svg>\r\n            <p className=\"mt-4\">Selectați un segment pentru a evidenția culorile complementare împărțite.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RoataCulorilorComplementareImpartite;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}