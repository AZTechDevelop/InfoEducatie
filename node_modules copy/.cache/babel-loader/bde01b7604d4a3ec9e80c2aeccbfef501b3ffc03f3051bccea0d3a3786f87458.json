{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andreea\\\\infoeducatie\\\\src\\\\Teorie\\\\componente\\\\RoataComplementaraImpartita.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoataCulorilorSplitComplementary() {\n  _s();\n  const [segmentSelectat, setSegmentSelectat] = useState(null);\n\n  // Definirea grupurilor de culori: principală + cele două adiacente\n  const culori = [\"yellow\", \"orangeyellow\", \"orange\", \"redOrange\", \"red\", \"violet-red\", \"violet\", \"blue-violet\", \"blue\", \"blue-green\", \"green\", \"yellowGreen\"];\n  const totalSegments = culori.length;\n  const calculCoordonate = index => {\n    const angle = index / totalSegments * Math.PI * 2;\n    const x = Math.cos(angle);\n    const y = Math.sin(angle);\n    return [x, y];\n  };\n  const getPathData = index => {\n    const start = calculCoordonate(index);\n    const end = calculCoordonate(index + 1);\n    return `M0,0 L${start[0] * 16},${start[1] * 16} A16,16 0 0,1 ${end[0] * 16},${end[1] * 16}Z`;\n  };\n  const adjustColor = index => {\n    const colorGroup = Math.floor(segmentSelectat / 3) * 3;\n    if (segmentSelectat !== null && (index === colorGroup || index === colorGroup + 1 || index === colorGroup + 2)) {\n      return culori[index];\n    }\n    return 'grey';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold my-4\",\n      children: \"Roata Culorilor Complementare \\xCEmp\\u0103r\\u021Bite\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: \"-18 -18 36 36\",\n      width: \"360px\",\n      height: \"360px\",\n      children: culori.map((_, index) => /*#__PURE__*/_jsxDEV(\"path\", {\n        d: getPathData(index),\n        fill: adjustColor(index),\n        onClick: () => setSegmentSelectat(index),\n        style: {\n          cursor: 'pointer',\n          stroke: 'black',\n          strokeWidth: 0.1\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4\",\n      children: \"Selecta\\u021Bi o culoare pentru a eviden\\u021Bia aceasta \\u0219i cele dou\\u0103 adiacente. Restul vor deveni gri.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(RoataCulorilorSplitComplementary, \"pAZfw1FyaL+UMNFudMOje7Al4f8=\");\n_c = RoataCulorilorSplitComplementary;\nexport default RoataCulorilorSplitComplementary;\nvar _c;\n$RefreshReg$(_c, \"RoataCulorilorSplitComplementary\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RoataCulorilorSplitComplementary","_s","segmentSelectat","setSegmentSelectat","culori","totalSegments","length","calculCoordonate","index","angle","Math","PI","x","cos","y","sin","getPathData","start","end","adjustColor","colorGroup","floor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","width","height","map","_","d","fill","onClick","style","cursor","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["C:/Users/Andreea/infoeducatie/src/Teorie/componente/RoataComplementaraImpartita.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction RoataCulorilorSplitComplementary() {\r\n    const [segmentSelectat, setSegmentSelectat] = useState(null);\r\n\r\n    // Definirea grupurilor de culori: principală + cele două adiacente\r\n    const culori = [\r\n       \"yellow\",\r\n       \"orangeyellow\",\r\n       \"orange\",\r\n       \"redOrange\",\r\n       \"red\",\r\n       \"violet-red\",\r\n       \"violet\",\r\n       \"blue-violet\",\r\n       \"blue\",\r\n       \"blue-green\",\r\n       \"green\",\r\n       \"yellowGreen\"\r\n    ];\r\n\r\n    const totalSegments = culori.length;\r\n\r\n    const calculCoordonate = (index) => {\r\n        const angle = (index / totalSegments) * Math.PI * 2;\r\n        const x = Math.cos(angle);\r\n        const y = Math.sin(angle);\r\n        return [x, y];\r\n    };\r\n\r\n    const getPathData = (index) => {\r\n        const start = calculCoordonate(index);\r\n        const end = calculCoordonate(index + 1);\r\n\r\n        return `M0,0 L${start[0] * 16},${start[1] * 16} A16,16 0 0,1 ${end[0] * 16},${end[1] * 16}Z`;\r\n    };\r\n\r\n    const adjustColor = (index) => {\r\n        const colorGroup = Math.floor(segmentSelectat / 3) * 3;\r\n        if (segmentSelectat !== null && (index === colorGroup || index === colorGroup + 1 || index === colorGroup + 2)) {\r\n            return culori[index];\r\n        }\r\n        return 'grey';\r\n    };\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h1 className=\"text-2xl font-bold my-4\">Roata Culorilor Complementare Împărțite</h1>\r\n            <svg viewBox=\"-18 -18 36 36\" width=\"360px\" height=\"360px\">\r\n                {culori.map((_, index) => (\r\n                    <path\r\n                        key={index}\r\n                        d={getPathData(index)}\r\n                        fill={adjustColor(index)}\r\n                        onClick={() => setSegmentSelectat(index)}\r\n                        style={{ cursor: 'pointer', stroke: 'black', strokeWidth: 0.1 }}\r\n                    />\r\n                ))}\r\n            </svg>\r\n            <p className=\"mt-4\">Selectați o culoare pentru a evidenția aceasta și cele două adiacente. Restul vor deveni gri.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RoataCulorilorSplitComplementary;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}