{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const RoataDublaComplementara=()=>{const culori=[\"rgb(255, 69, 0)\",// redOrange\n\"rgb(255, 0, 0)\",// red\n\"rgb(199, 21, 133)\",// violet-red\n\"rgb(238, 130, 238)\",// violet\n\"rgb(138, 43, 226)\",// blue-violet\n\"rgb(0, 0, 255)\",// blue\n\"rgb(0, 139, 139)\",// blue-green\n\"rgb(0, 128, 0)\",// green\n\"rgb(173, 255, 47)\",// yellowGreen\n\"rgb(255, 255, 0)\",// yellow\n\"rgb(255, 179, 0)\",// orangeyellow\n\"rgb(255, 165, 0)\"// orange\n];const[selectedColorIndex,setSelectedColorIndex]=useState(null);const radius=150;const cx=200;const cy=200;const getCoordinatesForAngle=(angle,radius)=>{let rad=angle*Math.PI/180;return{x:cx+radius*Math.cos(rad),y:cy+radius*Math.sin(rad)};};const getPathData=(index,total,radius)=>{const angle=360/total;const startAngle=angle*index;const endAngle=startAngle+angle;const largeArc=angle>180?1:0;const start=getCoordinatesForAngle(startAngle,radius);const end=getCoordinatesForAngle(endAngle,radius);return\"M\".concat(cx,\",\").concat(cy,\" L\").concat(start.x,\",\").concat(start.y,\" A\").concat(radius,\",\").concat(radius,\" 0 \").concat(largeArc,\",1 \").concat(end.x,\",\").concat(end.y,\" Z\");};const handleClick=index=>{setSelectedColorIndex(index);};const getFillColor=index=>{if(selectedColorIndex===null)return culori[index];const totalColors=culori.length;const complement1=(selectedColorIndex+totalColors/2)%totalColors;const complement2=(selectedColorIndex+totalColors/4)%totalColors;const complement3=(selectedColorIndex+3*totalColors/4)%totalColors;if([selectedColorIndex,complement1,complement2,complement3].includes(index)){return culori[index];}return'grey';// Non-selected colors are greyed out\n};return/*#__PURE__*/_jsx(\"svg\",{width:\"350\",height:\"350\",viewBox:\"0 0 350 350\",children:culori.map((_,index)=>/*#__PURE__*/_jsx(\"path\",{d:getPathData(index,culori.length,radius),fill:getFillColor(index),onClick:()=>handleClick(index)},index))});};export default RoataDublaComplementara;","map":{"version":3,"names":["React","useState","jsx","_jsx","RoataDublaComplementara","culori","selectedColorIndex","setSelectedColorIndex","radius","cx","cy","getCoordinatesForAngle","angle","rad","Math","PI","x","cos","y","sin","getPathData","index","total","startAngle","endAngle","largeArc","start","end","concat","handleClick","getFillColor","totalColors","length","complement1","complement2","complement3","includes","width","height","viewBox","children","map","_","d","fill","onClick"],"sources":["C:/Users/Andreea/infoeducatie/src/Teorie/componente/RoataPatrat.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst RoataDublaComplementara = () => {\r\n  const culori = [\r\n    \"rgb(255, 69, 0)\",    // redOrange\r\n    \"rgb(255, 0, 0)\",     // red\r\n    \"rgb(199, 21, 133)\",  // violet-red\r\n    \"rgb(238, 130, 238)\", // violet\r\n    \"rgb(138, 43, 226)\",  // blue-violet\r\n    \"rgb(0, 0, 255)\",     // blue\r\n    \"rgb(0, 139, 139)\",   // blue-green\r\n    \"rgb(0, 128, 0)\",     // green\r\n    \"rgb(173, 255, 47)\",  // yellowGreen\r\n    \"rgb(255, 255, 0)\",   // yellow\r\n    \"rgb(255, 179, 0)\",   // orangeyellow\r\n    \"rgb(255, 165, 0)\",   // orange\r\n  ];\r\n\r\n  const [selectedColorIndex, setSelectedColorIndex] = useState(null);\r\n\r\n  const radius = 150;\r\n  const cx = 200;\r\n  const cy = 200;\r\n\r\n  const getCoordinatesForAngle = (angle, radius) => {\r\n    let rad = (angle * Math.PI) / 180;\r\n    return {\r\n      x: cx + radius * Math.cos(rad),\r\n      y: cy + radius * Math.sin(rad)\r\n    };\r\n  };\r\n\r\n  const getPathData = (index, total, radius) => {\r\n    const angle = 360 / total;\r\n    const startAngle = angle * index;\r\n    const endAngle = startAngle + angle;\r\n    const largeArc = angle > 180 ? 1 : 0;\r\n\r\n    const start = getCoordinatesForAngle(startAngle, radius);\r\n    const end = getCoordinatesForAngle(endAngle, radius);\r\n\r\n    return `M${cx},${cy} L${start.x},${start.y} A${radius},${radius} 0 ${largeArc},1 ${end.x},${end.y} Z`;\r\n  };\r\n\r\n  const handleClick = index => {\r\n    setSelectedColorIndex(index);\r\n  };\r\n\r\n  const getFillColor = (index) => {\r\n    if (selectedColorIndex === null) return culori[index];\r\n    const totalColors = culori.length;\r\n    const complement1 = (selectedColorIndex + totalColors / 2) % totalColors;\r\n    const complement2 = (selectedColorIndex + totalColors / 4) % totalColors;\r\n    const complement3 = (selectedColorIndex + 3 * totalColors / 4) % totalColors;\r\n    if ([selectedColorIndex, complement1, complement2, complement3].includes(index)) {\r\n      return culori[index];\r\n    }\r\n    return 'grey'; // Non-selected colors are greyed out\r\n  };\r\n\r\n  return (\r\n    <svg width=\"350\" height=\"350\" viewBox=\"0 0 350 350\">\r\n      {culori.map((_, index) => (\r\n        <path\r\n          key={index}\r\n          d={getPathData(index, culori.length, radius)}\r\n          fill={getFillColor(index)}\r\n          onClick={() => handleClick(index)}\r\n        />\r\n      ))}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default RoataDublaComplementara;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}