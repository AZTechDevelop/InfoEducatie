{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andreea\\\\infoeducatie\\\\src\\\\Quizz-uri\\\\QuizPerceptie.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst intrebari = [{\n  question: \"Ce culoare este asociată cu profesionalismul și încrederea?\",\n  options: [\"Albastru\", \"Portocaliu\", \"Negru\", \"Alb\"],\n  answer: \"Albastru\"\n}, {\n  question: \"Ce culoare simbolizează luxul și calitatea?\",\n  options: [\"Gri\", \"Mov\", \"Verde\", \"Galben\"],\n  answer: \"Mov\"\n}, {\n  intrebare: \"Ce culoare evocă pasiune și energie?\",\n  optiuni: [\"Verde\", \"Roșu\", \"Albastru\", \"Gri\"],\n  raspunsCorect: \"Roșu\"\n}, {\n  intrebare: \"Care culoare este asociată cu relaxarea și este odihnitoare pentru ochi?\",\n  optiuni: [\"Galben\", \"Mov\", \"Verde\", \"Portocaliu\"],\n  raspunsCorect: \"Verde\"\n}, {\n  intrebare: \"Care culoare stimulează apetitul în restaurante?\",\n  optiuni: [\"Portocaliu\", \"Albastru\", \"Negru\", \"Alb\"],\n  raspunsCorect: \"Portocaliu\"\n}, {\n  intrebare: \"Care culoare stimulează apetitul ?\",\n  optiuni: [\"Portocaliu\", \"Albastru\", \"Negru\", \"Alb\"],\n  raspunsCorect: \"Portocaliu\"\n}, {\n  question: \"Care culoare este percepută ca puritate?\",\n  options: [\"Alb\", \"Negru\", \"Gri\", \"Roșu\"],\n  answer: \"Alb\"\n}, {\n  question: \"Ce culoare este adesea asociată cu doliul în culturile estice?\",\n  options: [\"Alb\", \"Negru\", \"Mov\", \"Roșu\"],\n  answer: \"Alb\"\n}, {\n  question: \"Ce culoare sugerează sofisticare și stabilitate?\",\n  options: [\"Gri\", \"Albastru\", \"Verde\", \"Galben\"],\n  answer: \"Gri\"\n}];\nfunction QuizPerceptiaCulorilor() {\n  _s();\n  const [intrebareCurenta, setIntrebareCurenta] = useState(0);\n  const [optiuniSelectate, setOptiuniSelectate] = useState([]);\n  const [arataRezultate, setArataRezultate] = useState(false);\n  const selecteazaOptiune = optiune => {\n    const newOptiuniSelectate = [...optiuniSelectate];\n    newOptiuniSelectate[intrebareCurenta] = optiune;\n    setOptiuniSelectate(newOptiuniSelectate);\n    const esteUltimaIntrebare = intrebareCurenta === intrebari.length - 1;\n    if (esteUltimaIntrebare) {\n      setArataRezultate(true);\n    } else {\n      setIntrebareCurenta(intrebareCurenta + 1);\n    }\n  };\n  const calculeazaScor = () => {\n    return intrebari.reduce((scor, intrebare, index) => {\n      if (intrebare.raspunsCorect === optiuniSelectate[index]) {\n        return scor + 1;\n      }\n      return scor;\n    }, 0);\n  };\n  const restartQuiz = () => {\n    setIntrebareCurenta(0);\n    setOptiuniSelectate([]);\n    setArataRezultate(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: arataRezultate ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Rezultatele Quizului\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Ai ob\\u021Binut \", optiuniSelectate.filter((opt, index) => intrebari[index].raspunsCorect === opt).length, \" / \", intrebari.length, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Intrebari gresite:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: intrebari.map((intrebare, index) => {\n          const raspunsCorect = intrebare.raspunsCorect;\n          const raspunsUtilizator = optiuniSelectate[index];\n          return raspunsUtilizator !== raspunsCorect ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: intrebare.intrebare\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"R\\u0103spunsul t\\u0103u: \", raspunsUtilizator]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"R\\u0103spuns corect: \", raspunsCorect]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this) : null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restartQuiz,\n        className: \"ml-10 mt-5 p-4 bg-blue-500 text-white rounded hover:bg-blue-700 flex justify-center items-center\",\n        children: \"Restart Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: intrebari[intrebareCurenta].intrebare\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: intrebari[intrebareCurenta].optiuni.map((optiune, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => selecteazaOptiune(optiune),\n          className: \"w-full my-2 text-blue-900 hover:bg-gray-600 hover:text-white duration-500\",\n          children: optiune\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizPerceptiaCulorilor, \"0hGolqpOSRGGG0Aju1N4hkchAD0=\");\n_c = QuizPerceptiaCulorilor;\nexport default QuizPerceptiaCulorilor;\nvar _c;\n$RefreshReg$(_c, \"QuizPerceptiaCulorilor\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","intrebari","question","options","answer","intrebare","optiuni","raspunsCorect","QuizPerceptiaCulorilor","_s","intrebareCurenta","setIntrebareCurenta","optiuniSelectate","setOptiuniSelectate","arataRezultate","setArataRezultate","selecteazaOptiune","optiune","newOptiuniSelectate","esteUltimaIntrebare","length","calculeazaScor","reduce","scor","index","restartQuiz","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","opt","map","raspunsUtilizator","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Andreea/infoeducatie/src/Quizz-uri/QuizPerceptie.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst intrebari = [\r\n    {\r\n        question: \"Ce culoare este asociată cu profesionalismul și încrederea?\",\r\n        options: [\"Albastru\", \"Portocaliu\", \"Negru\", \"Alb\"],\r\n        answer: \"Albastru\"\r\n      },\r\n      {\r\n        question: \"Ce culoare simbolizează luxul și calitatea?\",\r\n        options: [\"Gri\", \"Mov\", \"Verde\", \"Galben\"],\r\n        answer: \"Mov\"\r\n      },   \r\n  {\r\n    intrebare: \"Ce culoare evocă pasiune și energie?\",\r\n    optiuni: [\"Verde\", \"Roșu\", \"Albastru\", \"Gri\"],\r\n    raspunsCorect: \"Roșu\"\r\n  },\r\n  {\r\n    intrebare: \"Care culoare este asociată cu relaxarea și este odihnitoare pentru ochi?\",\r\n    optiuni: [\"Galben\", \"Mov\", \"Verde\", \"Portocaliu\"],\r\n    raspunsCorect: \"Verde\"\r\n  },\r\n  {\r\n    intrebare: \"Care culoare stimulează apetitul în restaurante?\",\r\n    optiuni: [\"Portocaliu\", \"Albastru\", \"Negru\", \"Alb\"],\r\n    raspunsCorect: \"Portocaliu\"\r\n  },\r\n  {\r\n    intrebare: \"Care culoare stimulează apetitul ?\",\r\n    optiuni: [\"Portocaliu\", \"Albastru\", \"Negru\", \"Alb\"],\r\n    raspunsCorect: \"Portocaliu\"\r\n  },\r\n  {\r\n    question: \"Care culoare este percepută ca puritate?\",\r\n    options: [\"Alb\", \"Negru\", \"Gri\", \"Roșu\"],\r\n    answer: \"Alb\"\r\n  },\r\n  {\r\n    question: \"Ce culoare este adesea asociată cu doliul în culturile estice?\",\r\n    options: [\"Alb\", \"Negru\", \"Mov\", \"Roșu\"],\r\n    answer: \"Alb\"\r\n  },\r\n  {\r\n    question: \"Ce culoare sugerează sofisticare și stabilitate?\",\r\n    options: [\"Gri\", \"Albastru\", \"Verde\", \"Galben\"],\r\n    answer: \"Gri\"\r\n  }\r\n  \r\n  \r\n];\r\n\r\n\r\nfunction QuizPerceptiaCulorilor() {\r\n    const [intrebareCurenta, setIntrebareCurenta] = useState(0);\r\n    const [optiuniSelectate, setOptiuniSelectate] = useState([]);\r\n    const [arataRezultate, setArataRezultate] = useState(false);\r\n\r\n    const selecteazaOptiune = (optiune) => {\r\n        const newOptiuniSelectate = [...optiuniSelectate];\r\n        newOptiuniSelectate[intrebareCurenta] = optiune;\r\n        setOptiuniSelectate(newOptiuniSelectate);\r\n\r\n        const esteUltimaIntrebare = intrebareCurenta === intrebari.length - 1;\r\n        if (esteUltimaIntrebare) {\r\n            setArataRezultate(true);\r\n        } else {\r\n            setIntrebareCurenta(intrebareCurenta + 1);\r\n        }\r\n    };\r\n    const calculeazaScor = () => {\r\n        return intrebari.reduce((scor, intrebare, index) => {\r\n            if (intrebare.raspunsCorect === optiuniSelectate[index]) {\r\n                return scor + 1;\r\n            }\r\n            return scor;\r\n        }, 0);\r\n    };\r\n    const restartQuiz = () => {\r\n        setIntrebareCurenta(0);\r\n        setOptiuniSelectate([]);\r\n        setArataRezultate(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mx-auto p-4\">\r\n            {arataRezultate ? (\r\n                <div>\r\n                    <h1>Rezultatele Quizului</h1>\r\n                    <p>Ai obținut {optiuniSelectate.filter((opt, index) => intrebari[index].raspunsCorect === opt).length} / {intrebari.length} </p>\r\n                    <p>Intrebari gresite:</p>\r\n                    <div>\r\n                        {intrebari.map((intrebare, index) => {\r\n                            const raspunsCorect = intrebare.raspunsCorect;\r\n                            const raspunsUtilizator = optiuniSelectate[index];\r\n                            return raspunsUtilizator !== raspunsCorect ? (\r\n                                <div key={index}>\r\n                                    <p>{intrebare.intrebare}</p>\r\n                                    <p>Răspunsul tău: {raspunsUtilizator}</p>\r\n                                    <p>Răspuns corect: {raspunsCorect}</p>\r\n                                </div>\r\n                            ) : null;\r\n                        })}\r\n                    </div>\r\n                    <button onClick={restartQuiz} className=\"ml-10 mt-5 p-4 bg-blue-500 text-white rounded hover:bg-blue-700 flex justify-center items-center\">\r\n    Restart Quiz\r\n</button>\r\n\r\n                </div>\r\n            )  : (\r\n                <div>\r\n                    <h2 className='text-center'>{intrebari[intrebareCurenta].intrebare}</h2>\r\n                    <div>\r\n                        {intrebari[intrebareCurenta].optiuni.map((optiune, index) => (\r\n                            <button key={index} onClick={() => selecteazaOptiune(optiune)} className='w-full my-2 text-blue-900 hover:bg-gray-600 hover:text-white duration-500'>\r\n                                {optiune}\r\n\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuizPerceptiaCulorilor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}