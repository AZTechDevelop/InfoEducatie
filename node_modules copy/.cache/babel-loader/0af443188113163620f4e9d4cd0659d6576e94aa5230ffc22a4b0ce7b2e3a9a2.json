{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andreea\\\\infoeducatie\\\\src\\\\Teorie\\\\componente\\\\RoataMonocromatica.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoataMonocromaticaVariata() {\n  _s();\n  const [selectedSegment, setSelectedSegment] = useState(-1);\n  const segments = 12; // Total de segmente\n  const colors = [\n  // Culorile de bază\n  '#FF6347', '#FF4500', '#FFD700', '#9ACD32', '#008000', '#008B8B', '#00BFFF', '#1E90FF', '#0000FF', '#4B0082', '#EE82EE', '#FF1493'];\n\n  // Generăm segmentele pentru SVG\n  const segmentPaths = [];\n  for (let i = 0; i < segments; i++) {\n    const color = colors[i];\n    const startAngle = 360 / segments * i;\n    const endAngle = startAngle + 360 / segments;\n    const shade = selectedSegment === i ? 0 : -50; // Dacă este selectat, nici o schimbare, altfel gri\n\n    for (let j = 0; j < 3; j++) {\n      const lightness = 50 + (j - 1) * 15; // Normal, întunecat și deschis\n      segmentPaths.push( /*#__PURE__*/_jsxDEV(\"path\", {\n        d: `M 0,0 v -16 A 16 16 0 0 1 ${(16 * Math.sin(Math.PI * endAngle / 180)).toFixed(2)},${(-16 * Math.cos(Math.PI * endAngle / 180)).toFixed(2)} z`,\n        fill: `hsl(${color.match(/\\d+/g).reduce((a, b) => a + parseInt(b), 0) % 360},100%,${lightness}%)`,\n        stroke: \"white\",\n        strokeWidth: \"0.5\",\n        transform: `rotate(${startAngle + j * (360 / (segments * 3))},0,0) translate(18,18)`,\n        onClick: () => setSelectedSegment(i),\n        style: {\n          cursor: 'pointer'\n        }\n      }, `${i}-${j}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-6 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Roata Monocromatic\\u0103 Variat\\u0103\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: \"-18 -18 36 36\",\n      width: \"300px\",\n      height: \"300px\",\n      children: segmentPaths\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4\",\n      children: \"Selecta\\u021Bi un segment pentru a eviden\\u021Bia varia\\u021Biile de culoare, restul segmentelor vor fi afi\\u0219ate \\xEEn nuan\\u021Be de gri.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(RoataMonocromaticaVariata, \"SgxKotdiJBYbIP1E8pd8haknkzw=\");\n_c = RoataMonocromaticaVariata;\nexport default RoataMonocromaticaVariata;\nvar _c;\n$RefreshReg$(_c, \"RoataMonocromaticaVariata\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RoataMonocromaticaVariata","_s","selectedSegment","setSelectedSegment","segments","colors","segmentPaths","i","color","startAngle","endAngle","shade","j","lightness","push","d","Math","sin","PI","toFixed","cos","fill","match","reduce","a","b","parseInt","stroke","strokeWidth","transform","onClick","style","cursor","fileName","_jsxFileName","lineNumber","columnNumber","className","children","viewBox","width","height","_c","$RefreshReg$"],"sources":["C:/Users/Andreea/infoeducatie/src/Teorie/componente/RoataMonocromatica.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction RoataMonocromaticaVariata() {\r\n    const [selectedSegment, setSelectedSegment] = useState(-1);\r\n\r\n    const segments = 12; // Total de segmente\r\n    const colors = [ // Culorile de bază\r\n        '#FF6347', '#FF4500', '#FFD700', '#9ACD32',\r\n        '#008000', '#008B8B', '#00BFFF', '#1E90FF',\r\n        '#0000FF', '#4B0082', '#EE82EE', '#FF1493'\r\n    ];\r\n\r\n    // Generăm segmentele pentru SVG\r\n    const segmentPaths = [];\r\n    for (let i = 0; i < segments; i++) {\r\n        const color = colors[i];\r\n        const startAngle = (360 / segments) * i;\r\n        const endAngle = startAngle + (360 / segments);\r\n        const shade = (selectedSegment === i) ? 0 : -50; // Dacă este selectat, nici o schimbare, altfel gri\r\n\r\n        for (let j = 0; j < 3; j++) {\r\n            const lightness = 50 + (j - 1) * 15; // Normal, întunecat și deschis\r\n            segmentPaths.push(\r\n                <path\r\n                    key={`${i}-${j}`}\r\n                    d={`M 0,0 v -16 A 16 16 0 0 1 ${(16 * Math.sin(Math.PI * endAngle / 180)).toFixed(2)},${(-16 * Math.cos(Math.PI * endAngle / 180)).toFixed(2)} z`}\r\n                    fill={`hsl(${(color.match(/\\d+/g).reduce((a, b) => a + parseInt(b), 0) % 360)},100%,${lightness}%)`}\r\n                    stroke=\"white\"\r\n                    strokeWidth=\"0.5\"\r\n                    transform={`rotate(${startAngle + (j * (360 / (segments * 3)))},0,0) translate(18,18)`}\r\n                    onClick={() => setSelectedSegment(i)}\r\n                    style={{ cursor: 'pointer' }}\r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mx-auto px-4 py-6 text-center\">\r\n            <h1 className=\"text-2xl font-bold mb-4\">Roata Monocromatică Variată</h1>\r\n            <svg viewBox=\"-18 -18 36 36\" width=\"300px\" height=\"300px\">\r\n                {segmentPaths}\r\n            </svg>\r\n            <p className=\"mt-4\">Selectați un segment pentru a evidenția variațiile de culoare, restul segmentelor vor fi afișate în nuanțe de gri.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RoataMonocromaticaVariata;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}