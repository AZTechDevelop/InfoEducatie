{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andreea\\\\infoeducatie\\\\src\\\\Joc\\\\joc.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './joc.css';\nimport './over.css';\nimport Effect from './effect';\nimport DropdownMenu from '../DropDownMenu/DropDownMenu';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Joc() {\n  _s();\n  const [isOverVisible, setIsOverVisible] = useState(false);\n  const [score, setScore] = useState(5);\n  const [correctCounter, setCorrectCounter] = useState(0);\n  const [numSquares, setNumSquares] = useState(4);\n  const [colors, setColors] = useState([]);\n  const [pickedColor, setPickedColor] = useState(\"\");\n  const [bestScore, setBestScore] = useState(0);\n  const [difficulty, setDifficulty] = useState(4);\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\n  const toggleMenu = () => {\n    setIsMenuVisible(!isMenuVisible);\n  };\n  useEffect(() => {\n    reset();\n  }, [numSquares]);\n  useEffect(() => {\n    resetGame();\n  }, [numSquares]);\n  const genRandomColors = num => {\n    // Generează un array de culori aleatorii\n    let arr = [];\n    for (let i = 0; i < num; i++) {\n      arr.push(randomColor());\n    }\n    return arr;\n  };\n  const randomColor = () => {\n    // Generează o singură culoare aleatorie\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgb(${r}, ${g}, ${b})`;\n  };\n  var handleSquareClick = (color, index) => {\n    if (color === pickedColor) {\n      setCorrectCounter(prevCorrectCounter => {\n        const updatedCorrectCounter = prevCorrectCounter + 1;\n        setBestScore(prevBestScore => Math.max(prevBestScore, updatedCorrectCounter));\n        return updatedCorrectCounter;\n      });\n      reset(); // Sau reset(), asigură-te că folosești consistent funcția dorită pentru resetare\n    } else {\n      setScore(score - 1);\n      setColors(prevColors => prevColors.map((item, idx) => idx === index ? {\n        ...item,\n        color: 'grey',\n        isClicked: true\n      } : item));\n      if (score === 1) {\n        resetGame();\n        setIsOverVisible(true);\n      }\n    }\n  };\n  var resetGame = () => {\n    var newColors = genRandomColors(numSquares);\n    var newPickedColor = newColors[Math.floor(Math.random() * newColors.length)];\n    setColors(newColors);\n    setPickedColor(newPickedColor);\n    setIsOverVisible(false);\n    setScore(5);\n    setCorrectCounter(0);\n  };\n  var reset = () => {\n    var newColors = genRandomColors(numSquares);\n    var newPickedColor = chooseColor(newColors);\n    setColors(newColors);\n    setPickedColor(newPickedColor);\n  };\n  var chooseColor = colors => {\n    var random = Math.floor(Math.random() * colors.length);\n    return colors[random];\n  };\n  var changeDifficulty = newDifficulty => {\n    setNumSquares(newDifficulty);\n    setDifficulty(newDifficulty); // Actualizează starea difficulty la noua dificultate selectată\n    reset();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isOverVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"finalScoreF\",\n        children: [\"Final Score: \", correctCounter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"finalBestScoreF\",\n        children: [\"Best Score: \", bestScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"playAgain\",\n        onClick: () => setIsOverVisible(false),\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"stripe0\",\n      children: [/*#__PURE__*/_jsxDEV(DropdownMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Effect, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `mode ${difficulty === 2 ? 'selected' : ''}`,\n        onClick: () => changeDifficulty(2),\n        children: \"Usor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `mode ${difficulty === 4 ? 'selected' : ''}`,\n        onClick: () => changeDifficulty(4),\n        children: \"Normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `mode ${difficulty === 6 ? 'selected' : ''}`,\n        onClick: () => changeDifficulty(6),\n        children: \"Greu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"infoList\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"infoItem\",\n        children: [\"Vieti: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"infoItem\",\n        children: [\"Scor Actual: \", correctCounter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"infoItem\",\n        children: [\"Cel Mai Bun Scor: \", bestScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"color-display\",\n      children: pickedColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: colors.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"square\",\n        style: {\n          backgroundColor: color,\n          transition: 'all 0.4s ease'\n        },\n        onClick: () => handleSquareClick(color, index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Joc, \"LszMJkNW53POfuW8ta6QxPhSUIs=\");\n_c = Joc;\nexport default Joc;\nvar _c;\n$RefreshReg$(_c, \"Joc\");","map":{"version":3,"names":["React","useState","useEffect","Effect","DropdownMenu","jsxDEV","_jsxDEV","Fragment","_Fragment","Joc","_s","isOverVisible","setIsOverVisible","score","setScore","correctCounter","setCorrectCounter","numSquares","setNumSquares","colors","setColors","pickedColor","setPickedColor","bestScore","setBestScore","difficulty","setDifficulty","isMenuVisible","setIsMenuVisible","toggleMenu","reset","resetGame","genRandomColors","num","arr","i","push","randomColor","r","Math","floor","random","g","b","handleSquareClick","color","index","prevCorrectCounter","updatedCorrectCounter","prevBestScore","max","prevColors","map","item","idx","isClicked","newColors","newPickedColor","length","chooseColor","changeDifficulty","newDifficulty","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","style","backgroundColor","transition","_c","$RefreshReg$"],"sources":["C:/Users/Andreea/infoeducatie/src/Joc/joc.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './joc.css';\r\nimport './over.css'\r\nimport Effect from './effect';\r\nimport DropdownMenu from '../DropDownMenu/DropDownMenu';\r\n\r\n\r\nfunction Joc() {\r\n  const [isOverVisible, setIsOverVisible] = useState(false);\r\n  const [score, setScore] = useState(5);\r\n  const [correctCounter, setCorrectCounter] = useState(0);\r\n  const [numSquares, setNumSquares] = useState(4);\r\n  const [colors, setColors] = useState([]);\r\n  const [pickedColor, setPickedColor] = useState(\"\");\r\n  const [bestScore, setBestScore] = useState(0);\r\n  const [difficulty, setDifficulty] = useState(4);\r\n\r\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuVisible(!isMenuVisible);\r\n  };\r\n\r\n  useEffect(() => {\r\n    reset();\r\n  }, [numSquares]); \r\n\r\n  useEffect(() => {\r\n   \r\n    resetGame();\r\n  }, [numSquares]);\r\n\r\n  const genRandomColors = (num) => {\r\n    // Generează un array de culori aleatorii\r\n    let arr = [];\r\n    for (let i = 0; i < num; i++) {\r\n      arr.push(randomColor());\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  const randomColor = () => {\r\n    // Generează o singură culoare aleatorie\r\n    const r = Math.floor(Math.random() * 256);\r\n    const g = Math.floor(Math.random() * 256);\r\n    const b = Math.floor(Math.random() * 256);\r\n    return `rgb(${r}, ${g}, ${b})`;\r\n  };\r\n\r\n  \r\n\r\n  var handleSquareClick = (color,index) => {\r\n    if (color === pickedColor) {\r\n      setCorrectCounter((prevCorrectCounter) => {\r\n        const updatedCorrectCounter = prevCorrectCounter + 1;\r\n        setBestScore((prevBestScore) => Math.max(prevBestScore, updatedCorrectCounter));\r\n        return updatedCorrectCounter; \r\n      });\r\n\r\n      reset(); // Sau reset(), asigură-te că folosești consistent funcția dorită pentru resetare\r\n    } else {\r\n      setScore(score-1);\r\n      setColors(prevColors => prevColors.map((item, idx) => \r\n      idx === index ? { ...item, color: 'grey', isClicked: true } : item\r\n    ));\r\n      if(score===1){\r\n        resetGame();\r\n        setIsOverVisible(true)\r\n      }\r\n    }\r\n  };\r\n  \r\n  \r\n  var resetGame = () => {\r\n    var newColors = genRandomColors(numSquares);\r\n    var newPickedColor = newColors[Math.floor(Math.random() * newColors.length)];\r\n    setColors(newColors);\r\n    setPickedColor(newPickedColor);\r\n    setIsOverVisible(false);\r\n    setScore(5);\r\n    setCorrectCounter(0);\r\n  };\r\n\r\n\r\n  var reset = () => {\r\n    var newColors = genRandomColors(numSquares);\r\n    var newPickedColor = chooseColor(newColors);\r\n    setColors(newColors);\r\n    setPickedColor(newPickedColor);\r\n\r\n  };\r\n\r\n  var chooseColor = (colors) => {\r\n    var random = Math.floor(Math.random() * colors.length);\r\n    return colors[random];\r\n  };\r\n\r\n\r\n  var changeDifficulty = (newDifficulty) => {\r\n    setNumSquares(newDifficulty);\r\n    setDifficulty(newDifficulty); // Actualizează starea difficulty la noua dificultate selectată\r\n    reset();\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n   \r\n      {isOverVisible && (\r\n        <div id=\"over\">\r\n          <h1 id=\"finalScoreF\">Final Score: {correctCounter}</h1>\r\n          <h1 id=\"finalBestScoreF\">Best Score: {bestScore}</h1>\r\n          <button id=\"playAgain\" onClick={() => setIsOverVisible(false)}>Play Again</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Restul interfeței jocului */}\r\n      <div id=\"stripe0\">\r\n        <DropdownMenu />\r\n        <Effect />\r\n        <button className={`mode ${difficulty === 2 ? 'selected' : ''}`} onClick={() => changeDifficulty(2)}>Usor</button>\r\n        <button className={`mode ${difficulty === 4 ? 'selected' : ''}`} onClick={() => changeDifficulty(4)}>Normal</button>\r\n        <button className={`mode ${difficulty === 6 ? 'selected' : ''}`} onClick={() => changeDifficulty(6)}>Greu</button>\r\n      </div>\r\n\r\n      <div className=\"infoList\">\r\n        <label className=\"infoItem\">Vieti: {score}</label>\r\n        <label className=\"infoItem\">Scor Actual: {correctCounter}</label>\r\n        <label className=\"infoItem\">Cel Mai Bun Scor: {bestScore}</label>\r\n      </div>\r\n\r\n      <span id=\"color-display\">{pickedColor}</span>\r\n\r\n      <div id=\"container\">\r\n        {colors.map((color, index) => (\r\n          <div key={index} className=\"square\" style={{ backgroundColor: color, transition:'all 0.4s ease' }} onClick={() => handleSquareClick(color,index)}></div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Joc;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}