{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andreea\\\\infoeducatie\\\\src\\\\Teorie\\\\componente\\\\RoataDublaComplementara.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoataDublaComplementara = () => {\n  _s();\n  const culori = [\"rgb(255, 69, 0)\",\n  // rosuPortocaliu\n  \"rgb(255, 0, 0)\",\n  // rosu\n  \"rgb(199, 21, 133)\",\n  // rosuViolet\n  \"rgb(238, 130, 238)\",\n  // violet\n  \"rgb(138, 43, 226)\",\n  // violetAlbastru\n  \"rgb(0, 0, 255)\",\n  // albastru\n  \"rgb(0, 139, 139)\",\n  // albastruVerde\n  \"rgb(0, 128, 0)\",\n  // verde\n  \"rgb(173, 255, 47)\",\n  // verdeGalben\n  \"rgb(255, 255, 0)\",\n  // galben\n  \"rgb(255, 179, 0)\",\n  // galbenPortocaliu\n  \"rgb(255, 165, 0)\" // portocaliu\n  ];\n  const [indiceCuloareSelectata, setIndiceCuloareSelectata] = useState(null);\n  const raza = 150;\n  const centruX = 200;\n  const centruY = 200;\n  const calculeazaCoordonatePentruUnghi = (unghi, raza) => {\n    let rad = unghi * Math.PI / 180;\n    return {\n      x: centruX + raza * Math.cos(rad),\n      y: centruY + raza * Math.sin(rad)\n    };\n  };\n  const calculeazaDateTraseu = (index, total, raza) => {\n    const unghi = 360 / total;\n    const unghiStart = unghi * index;\n    const unghiSfarsit = unghiStart + unghi;\n    const arcMare = unghi > 180 ? 1 : 0;\n    const start = calculeazaCoordonatePentruUnghi(unghiStart, raza);\n    const sfarsit = calculeazaCoordonatePentruUnghi(unghiSfarsit, raza);\n    return `M${centruX},${centruY} L${start.x},${start.y} A${raza},${raza} 0 ${arcMare},1 ${sfarsit.x},${sfarsit.y} Z`;\n  };\n  const gestioneazaClick = index => {\n    setIndiceCuloareSelectata(index);\n  };\n  const obtineCuloareUmplere = index => {\n    if (indiceCuloareSelectata === null) return culori[index];\n    const numarTotalCulori = culori.length;\n    const complement1 = (indiceCuloareSelectata + 1) % numarTotalCulori;\n    const complement2 = (indiceCuloareSelectata + numarTotalCulori / 2) % numarTotalCulori;\n    const complement3 = (complement2 + 1) % numarTotalCulori;\n    if ([indiceCuloareSelectata, complement1, complement2, complement3].includes(index)) {\n      return culori[index];\n    }\n    return 'grey';\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"200\",\n    height: \"200\",\n    viewBox: \"0 0 300 300\",\n    children: culori.map((_, index) => /*#__PURE__*/_jsxDEV(\"path\", {\n      d: calculeazaDateTraseu(index, culori.length, raza),\n      fill: obtineCuloareUmplere(index),\n      onClick: () => gestioneazaClick(index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(RoataDublaComplementara, \"W2lOhnOxSsK4BdRIiKQCP7L4Bxk=\");\n_c = RoataDublaComplementara;\nexport default RoataDublaComplementara;\nvar _c;\n$RefreshReg$(_c, \"RoataDublaComplementara\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RoataDublaComplementara","_s","culori","indiceCuloareSelectata","setIndiceCuloareSelectata","raza","centruX","centruY","calculeazaCoordonatePentruUnghi","unghi","rad","Math","PI","x","cos","y","sin","calculeazaDateTraseu","index","total","unghiStart","unghiSfarsit","arcMare","start","sfarsit","gestioneazaClick","obtineCuloareUmplere","numarTotalCulori","length","complement1","complement2","complement3","includes","width","height","viewBox","children","map","_","d","fill","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Andreea/infoeducatie/src/Teorie/componente/RoataDublaComplementara.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst RoataDublaComplementara = () => {\r\n  const culori = [\r\n    \"rgb(255, 69, 0)\",    // rosuPortocaliu\r\n    \"rgb(255, 0, 0)\",     // rosu\r\n    \"rgb(199, 21, 133)\",  // rosuViolet\r\n    \"rgb(238, 130, 238)\", // violet\r\n    \"rgb(138, 43, 226)\",  // violetAlbastru\r\n    \"rgb(0, 0, 255)\",     // albastru\r\n    \"rgb(0, 139, 139)\",   // albastruVerde\r\n    \"rgb(0, 128, 0)\",     // verde\r\n    \"rgb(173, 255, 47)\",  // verdeGalben\r\n    \"rgb(255, 255, 0)\",   // galben\r\n    \"rgb(255, 179, 0)\",   // galbenPortocaliu\r\n    \"rgb(255, 165, 0)\",   // portocaliu\r\n  ];\r\n\r\n  const [indiceCuloareSelectata, setIndiceCuloareSelectata] = useState(null);\r\n\r\n  const raza = 150;\r\n  const centruX = 200;\r\n  const centruY = 200;\r\n\r\n  const calculeazaCoordonatePentruUnghi = (unghi, raza) => {\r\n    let rad = (unghi * Math.PI) / 180;\r\n    return {\r\n      x: centruX + raza * Math.cos(rad),\r\n      y: centruY + raza * Math.sin(rad)\r\n    };\r\n  };\r\n\r\n  const calculeazaDateTraseu = (index, total, raza) => {\r\n    const unghi = 360 / total;\r\n    const unghiStart = unghi * index;\r\n    const unghiSfarsit = unghiStart + unghi;\r\n    const arcMare = unghi > 180 ? 1 : 0;\r\n\r\n    const start = calculeazaCoordonatePentruUnghi(unghiStart, raza);\r\n    const sfarsit = calculeazaCoordonatePentruUnghi(unghiSfarsit, raza);\r\n\r\n    return `M${centruX},${centruY} L${start.x},${start.y} A${raza},${raza} 0 ${arcMare},1 ${sfarsit.x},${sfarsit.y} Z`;\r\n  };\r\n\r\n  const gestioneazaClick = index => {\r\n    setIndiceCuloareSelectata(index);\r\n  };\r\n\r\n  const obtineCuloareUmplere = (index) => {\r\n    if (indiceCuloareSelectata === null) return culori[index];\r\n    const numarTotalCulori = culori.length;\r\n    const complement1 = (indiceCuloareSelectata + 1) % numarTotalCulori;\r\n    const complement2 = (indiceCuloareSelectata + numarTotalCulori / 2) % numarTotalCulori;\r\n    const complement3 = (complement2 + 1) % numarTotalCulori;\r\n    if ([indiceCuloareSelectata, complement1, complement2, complement3].includes(index)) {\r\n      return culori[index];\r\n    }\r\n    return 'grey';\r\n  };\r\n\r\n  return (\r\n    <svg width=\"200\" height=\"200\" viewBox=\"0 0 300 300\">\r\n      {culori.map((_, index) => (\r\n        <path\r\n          key={index}\r\n          d={calculeazaDateTraseu(index, culori.length, raza)}\r\n          fill={obtineCuloareUmplere(index)}\r\n          onClick={() => gestioneazaClick(index)}\r\n        />\r\n      ))}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default RoataDublaComplementara;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}