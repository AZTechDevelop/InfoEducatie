{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andreea\\\\infoeducatie\\\\src\\\\Acasa\\\\img2.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ColorWheel = () => {\n  _s();\n  const [selectedColor, setSelectedColor] = useState('');\n  const [hoverColorInfo, setHoverColorInfo] = useState(null); // Inițializează ca null pentru claritate\n  const colors = [\"rgb(255,0,0)\", \"rgb(255,64,0)\", \"rgb(255,128,0)\", \"rgb(255,192,0)\", \"rgb(255,255,0)\", \"rgb(192,255,0)\", \"rgb(128,255,0)\", \"rgb(64,255,0)\", \"rgb(0,255,0)\", \"rgb(0,255,64)\", \"rgb(0,255,128)\", \"rgb(0,255,192)\", \"rgb(0,255,255)\", \"rgb(0,192,255)\", \"rgb(0,128,255)\", \"rgb(0,64,255)\", \"rgb(0,0,255)\", \"rgb(64,0,255)\", \"rgb(128,0,255)\", \"rgb(192,0,255)\"];\n  const radius = 150;\n  const strokeWidth = 30;\n  const gap = 0.02; // Gap between slices\n\n  const calculatePath = (index, total) => {\n    const anglePerSlice = 2 * Math.PI / total;\n    const startAngle = index * anglePerSlice + gap;\n    const endAngle = startAngle + anglePerSlice - gap * 2;\n    const largeArc = (endAngle - startAngle) % (Math.PI * 2) > Math.PI ? 1 : 0;\n    const startX = radius + radius * Math.cos(startAngle);\n    const startY = radius + radius * Math.sin(startAngle);\n    const endX = radius + radius * Math.cos(endAngle);\n    const endY = radius + radius * Math.sin(endAngle);\n    return [`M ${radius} ${radius}`, `L ${startX} ${startY}`, `A ${radius} ${radius} 0 ${largeArc} 1 ${endX} ${endY}`, `Z`].join(' ');\n  };\n  const handleColorSelect = color => {\n    const rgb = color;\n    const hex = rgbToHex(color);\n    setSelectedColor(color);\n    setHoverColorInfo( /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"RGB: \", rgb]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"HEX: \", hex]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true)); // Utilizează JSX pentru a seta state-ul\n  };\n  const rgbToHex = rgb => {\n    const [r, g, b] = rgb.match(/\\d+/g);\n    return \"#\" + [r, g, b].map(x => {\n      const hex = parseInt(x).toString(16);\n      return hex.length === 1 ? \"0\" + hex : hex;\n    }).join('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      width: radius * 2,\n      height: radius * 2,\n      viewBox: `0 0 ${radius * 2} ${radius * 2}`,\n      children: colors.map((color, index) => /*#__PURE__*/_jsxDEV(\"path\", {\n        d: calculatePath(index, colors.length),\n        fill: color,\n        stroke: color === selectedColor ? \"black\" : \"white\",\n        strokeWidth: color === selectedColor ? \"2\" : \"1\",\n        onMouseEnter: () => handleColorSelect(color),\n        onClick: () => handleColorSelect(color)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 text-lg\",\n      children: hoverColorInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ColorWheel, \"IdDeNYvCGz6LcvVgKPz77lTh6Dg=\");\n_c = ColorWheel;\nexport default ColorWheel;\nvar _c;\n$RefreshReg$(_c, \"ColorWheel\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ColorWheel","_s","selectedColor","setSelectedColor","hoverColorInfo","setHoverColorInfo","colors","radius","strokeWidth","gap","calculatePath","index","total","anglePerSlice","Math","PI","startAngle","endAngle","largeArc","startX","cos","startY","sin","endX","endY","join","handleColorSelect","color","rgb","hex","rgbToHex","children","fileName","_jsxFileName","lineNumber","columnNumber","r","g","b","match","map","x","parseInt","toString","length","className","width","height","viewBox","d","fill","stroke","onMouseEnter","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Andreea/infoeducatie/src/Acasa/img2.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ColorWheel = () => {\r\n  const [selectedColor, setSelectedColor] = useState('');\r\n  const [hoverColorInfo, setHoverColorInfo] = useState(null); // Inițializează ca null pentru claritate\r\n  const colors = [\r\n    \"rgb(255,0,0)\", \"rgb(255,64,0)\", \"rgb(255,128,0)\", \"rgb(255,192,0)\", \"rgb(255,255,0)\",\r\n    \"rgb(192,255,0)\", \"rgb(128,255,0)\", \"rgb(64,255,0)\", \"rgb(0,255,0)\", \"rgb(0,255,64)\",\r\n    \"rgb(0,255,128)\", \"rgb(0,255,192)\", \"rgb(0,255,255)\", \"rgb(0,192,255)\", \"rgb(0,128,255)\",\r\n    \"rgb(0,64,255)\", \"rgb(0,0,255)\", \"rgb(64,0,255)\", \"rgb(128,0,255)\", \"rgb(192,0,255)\"\r\n  ];\r\n\r\n  const radius = 150;\r\n  const strokeWidth = 30;\r\n  const gap = 0.02; // Gap between slices\r\n\r\n  const calculatePath = (index, total) => {\r\n    const anglePerSlice = 2 * Math.PI / total;\r\n    const startAngle = index * anglePerSlice + gap;\r\n    const endAngle = startAngle + anglePerSlice - gap * 2;\r\n    const largeArc = (endAngle - startAngle) % (Math.PI * 2) > Math.PI ? 1 : 0;\r\n\r\n    const startX = radius + radius * Math.cos(startAngle);\r\n    const startY = radius + radius * Math.sin(startAngle);\r\n    const endX = radius + radius * Math.cos(endAngle);\r\n    const endY = radius + radius * Math.sin(endAngle);\r\n\r\n    return [\r\n      `M ${radius} ${radius}`,\r\n      `L ${startX} ${startY}`,\r\n      `A ${radius} ${radius} 0 ${largeArc} 1 ${endX} ${endY}`,\r\n      `Z`\r\n    ].join(' ');\r\n  };\r\n\r\n  const handleColorSelect = (color) => {\r\n    const rgb = color;\r\n    const hex = rgbToHex(color);\r\n    setSelectedColor(color);\r\n    setHoverColorInfo(<><p>RGB: {rgb}</p><p>HEX: {hex}</p></>); // Utilizează JSX pentru a seta state-ul\r\n  };\r\n\r\n  const rgbToHex = (rgb) => {\r\n    const [r, g, b] = rgb.match(/\\d+/g);\r\n    return \"#\" + [r, g, b].map(x => {\r\n      const hex = parseInt(x).toString(16);\r\n      return hex.length === 1 ? \"0\" + hex : hex;\r\n    }).join('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center p-4\">\r\n      <svg width={radius * 2} height={radius * 2} viewBox={`0 0 ${radius * 2} ${radius * 2}`}>\r\n        {colors.map((color, index) => (\r\n          <path\r\n            key={index}\r\n            d={calculatePath(index, colors.length)}\r\n            fill={color}\r\n            stroke={color === selectedColor ? \"black\" : \"white\"}\r\n            strokeWidth={color === selectedColor ? \"2\" : \"1\"}\r\n            onMouseEnter={() => handleColorSelect(color)}\r\n            onClick={() => handleColorSelect(color)}\r\n          />\r\n        ))}\r\n      </svg>\r\n      <div className=\"mt-2 text-lg\">\r\n        {hoverColorInfo}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorWheel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}