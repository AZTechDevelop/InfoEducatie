{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andreea\\\\infoeducatie\\\\src\\\\Teorie\\\\componente\\\\RoataDublaComplementara.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoataDublaComplementara = () => {\n  _s();\n  const culori = [\"rgb(255, 69, 0)\",\n  // redOrange\n  \"rgb(255, 0, 0)\",\n  // red\n  \"rgb(199, 21, 133)\",\n  // violet-red\n  \"rgb(238, 130, 238)\",\n  // violet\n  \"rgb(138, 43, 226)\",\n  // blue-violet\n  \"rgb(0, 0, 255)\",\n  // blue\n  \"rgb(0, 139, 139)\",\n  // blue-green\n  \"rgb(0, 128, 0)\",\n  // green\n  \"rgb(173, 255, 47)\",\n  // yellowGreen\n  \"rgb(255, 255, 0)\",\n  // yellow\n  \"rgb(255, 179, 0)\",\n  // orangeyellow\n  \"rgb(255, 165, 0)\" // orange\n  ];\n  const [selectedColorIndex, setSelectedColorIndex] = useState(null);\n  const radius = 150;\n  const cx = 200;\n  const cy = 200;\n  const getCoordinatesForAngle = (angle, radius) => {\n    let rad = angle * Math.PI / 180;\n    return {\n      x: cx + radius * Math.cos(rad),\n      y: cy + radius * Math.sin(rad)\n    };\n  };\n  const getPathData = (index, total, radius) => {\n    const angle = 360 / total;\n    const startAngle = angle * index;\n    const endAngle = startAngle + angle;\n    const largeArc = angle > 180 ? 1 : 0;\n    const start = getCoordinatesForAngle(startAngle, radius);\n    const end = getCoordinatesForAngle(endAngle, radius);\n    return `M${cx},${cy} L${start.x},${start.y} A${radius},${radius} 0 ${largeArc},1 ${end.x},${end.y} Z`;\n  };\n  const handleClick = index => {\n    setSelectedColorIndex(index);\n  };\n  const getFillColor = index => {\n    if (selectedColorIndex === null) return culori[index];\n    const totalColors = culori.length;\n    const complement1 = (selectedColorIndex + totalColors / 2) % totalColors; // Direct opposite\n    const complement2 = (selectedColorIndex + totalColors / 3) % totalColors; // First double complement\n    const complement3 = (selectedColorIndex + 2 * totalColors / 3) % totalColors; // Second double complement\n    if ([selectedColorIndex, complement1, complement2, complement3].includes(index)) {\n      return culori[index];\n    }\n    return 'grey'; // Non-selected colors are greyed out\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"400\",\n    height: \"400\",\n    viewBox: \"0 0 400 400\",\n    children: culori.map((_, index) => /*#__PURE__*/_jsxDEV(\"path\", {\n      d: getPathData(index, culori.length, radius),\n      fill: getFillColor(index),\n      onClick: () => handleClick(index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(RoataDublaComplementara, \"+7NdJiq8CXxH4N1LPUpUvAZI7H0=\");\n_c = RoataDublaComplementara;\nexport default RoataDublaComplementara;\nvar _c;\n$RefreshReg$(_c, \"RoataDublaComplementara\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RoataDublaComplementara","_s","culori","selectedColorIndex","setSelectedColorIndex","radius","cx","cy","getCoordinatesForAngle","angle","rad","Math","PI","x","cos","y","sin","getPathData","index","total","startAngle","endAngle","largeArc","start","end","handleClick","getFillColor","totalColors","length","complement1","complement2","complement3","includes","width","height","viewBox","children","map","_","d","fill","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Andreea/infoeducatie/src/Teorie/componente/RoataDublaComplementara.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst RoataDublaComplementara = () => {\r\n  const culori = [\r\n    \"rgb(255, 69, 0)\",    // redOrange\r\n    \"rgb(255, 0, 0)\",     // red\r\n    \"rgb(199, 21, 133)\",  // violet-red\r\n    \"rgb(238, 130, 238)\", // violet\r\n    \"rgb(138, 43, 226)\",  // blue-violet\r\n    \"rgb(0, 0, 255)\",     // blue\r\n    \"rgb(0, 139, 139)\",   // blue-green\r\n    \"rgb(0, 128, 0)\",     // green\r\n    \"rgb(173, 255, 47)\",  // yellowGreen\r\n    \"rgb(255, 255, 0)\",   // yellow\r\n    \"rgb(255, 179, 0)\",   // orangeyellow\r\n    \"rgb(255, 165, 0)\",   // orange\r\n  ];\r\n\r\n  const [selectedColorIndex, setSelectedColorIndex] = useState(null);\r\n\r\n  const radius = 150;\r\n  const cx = 200;\r\n  const cy = 200;\r\n\r\n  const getCoordinatesForAngle = (angle, radius) => {\r\n    let rad = (angle * Math.PI) / 180;\r\n    return {\r\n      x: cx + radius * Math.cos(rad),\r\n      y: cy + radius * Math.sin(rad)\r\n    };\r\n  };\r\n\r\n  const getPathData = (index, total, radius) => {\r\n    const angle = 360 / total;\r\n    const startAngle = angle * index;\r\n    const endAngle = startAngle + angle;\r\n    const largeArc = angle > 180 ? 1 : 0;\r\n\r\n    const start = getCoordinatesForAngle(startAngle, radius);\r\n    const end = getCoordinatesForAngle(endAngle, radius);\r\n\r\n    return `M${cx},${cy} L${start.x},${start.y} A${radius},${radius} 0 ${largeArc},1 ${end.x},${end.y} Z`;\r\n  };\r\n\r\n  const handleClick = index => {\r\n    setSelectedColorIndex(index);\r\n  };\r\n\r\n  const getFillColor = (index) => {\r\n    if (selectedColorIndex === null) return culori[index];\r\n    const totalColors = culori.length;\r\n    const complement1 = (selectedColorIndex + totalColors / 2) % totalColors; // Direct opposite\r\n    const complement2 = (selectedColorIndex + totalColors / 3) % totalColors; // First double complement\r\n    const complement3 = (selectedColorIndex + 2 * totalColors / 3) % totalColors; // Second double complement\r\n    if ([selectedColorIndex, complement1, complement2, complement3].includes(index)) {\r\n      return culori[index];\r\n    }\r\n    return 'grey'; // Non-selected colors are greyed out\r\n  };\r\n\r\n  return (\r\n    <svg width=\"400\" height=\"400\" viewBox=\"0 0 400 400\">\r\n      {culori.map((_, index) => (\r\n        <path\r\n          key={index}\r\n          d={getPathData(index, culori.length, radius)}\r\n          fill={getFillColor(index)}\r\n          onClick={() => handleClick(index)}\r\n        />\r\n      ))}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default RoataDublaComplementara;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}