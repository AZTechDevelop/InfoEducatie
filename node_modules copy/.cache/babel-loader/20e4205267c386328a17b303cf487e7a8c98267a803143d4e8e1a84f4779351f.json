{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andreea\\\\infoeducatie\\\\src\\\\Teorie\\\\componente\\\\RoataMonocromatica.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoataMonocromaticaVariata() {\n  _s();\n  const [selectedSegment, setSelectedSegment] = useState(null);\n  const segments = 4;\n  const colors = ['#E63946', '#F4A261', '#E9C46A', '#2A9D8F', '#264653', '#2B2D42', '#8D99AE', '#EDF2F4', '#EF233C', '#D90429', '#06D6A0', '#118AB2'];\n  useEffect(() => {\n    setSelectedSegment(Math.floor(Math.random() * 3));\n  }, []);\n  const getCoordinatesForPercent = percent => {\n    const x = Math.cos(2 * Math.PI * percent);\n    const y = Math.sin(2 * Math.PI * percent);\n    return [x, y];\n  };\n  const getPathData = (index, part) => {\n    const startPercent = (index + part * 0.33) / segments;\n    const endPercent = (index + part * 0.33 + 0.33) / segments;\n    const [startX, startY] = getCoordinatesForPercent(startPercent);\n    const [endX, endY] = getCoordinatesForPercent(endPercent);\n    return `M 0 0 L ${startX * 16} ${startY * 16} A 16 16 0 0 1 ${endX * 16} ${endY * 16} z`;\n  };\n  const adjustColor = (color, part, index) => {\n    if (selectedSegment === index) {\n      let lightness = 40 + part * 20; // Ajustează luminozitatea pentru fiecare sub-segment\n      return `hsl(${color.match(/\\d+/g).reduce((a, b) => a + parseInt(b), 0) % 360}, 100%, ${lightness}%)`;\n    } else {\n      return 'grey'; // Culoarea pentru segmentele neselectate\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold my-4\",\n      children: \"Roata Monocromatic\\u0103 Variat\\u0103\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: \"-18 -18 36 36\",\n      width: \"300px\",\n      height: \"300px\",\n      children: colors.map((color, index) => [0, 1, 2].map(part => /*#__PURE__*/_jsxDEV(\"path\", {\n        d: getPathData(index, part),\n        fill: adjustColor(color, part, index),\n        onClick: () => setSelectedSegment(index),\n        style: {\n          cursor: 'pointer'\n        }\n      }, `${index}-${part}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4\",\n      children: \"Selecta\\u021Bi un segment pentru a vedea nuan\\u021Bele diferite ale aceleia\\u0219i culori. Restul segmentelor vor deveni gri.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(RoataMonocromaticaVariata, \"TP0ZmG4VdFS0Tplfvh2/vw9KbQU=\");\n_c = RoataMonocromaticaVariata;\nexport default RoataMonocromaticaVariata;\nvar _c;\n$RefreshReg$(_c, \"RoataMonocromaticaVariata\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RoataMonocromaticaVariata","_s","selectedSegment","setSelectedSegment","segments","colors","Math","floor","random","getCoordinatesForPercent","percent","x","cos","PI","y","sin","getPathData","index","part","startPercent","endPercent","startX","startY","endX","endY","adjustColor","color","lightness","match","reduce","a","b","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","width","height","map","d","fill","onClick","style","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Andreea/infoeducatie/src/Teorie/componente/RoataMonocromatica.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction RoataMonocromaticaVariata() {\r\n    const [selectedSegment, setSelectedSegment] = useState(null);\r\n    const segments = 4;\r\n    const colors = [\r\n        '#E63946', '#F4A261', '#E9C46A', '#2A9D8F',\r\n        '#264653', '#2B2D42', '#8D99AE', '#EDF2F4',\r\n        '#EF233C', '#D90429', '#06D6A0', '#118AB2'\r\n    ];\r\n\r\n    useEffect(() => {\r\n       \r\n        setSelectedSegment(Math.floor(Math.random() * 3));\r\n    }, []);\r\n\r\n    const getCoordinatesForPercent = (percent) => {\r\n        const x = Math.cos(2 * Math.PI * percent);\r\n        const y = Math.sin(2 * Math.PI * percent);\r\n        return [x, y];\r\n    };\r\n\r\n    const getPathData = (index, part) => {\r\n        const startPercent = (index + part * 0.33) / segments;\r\n        const endPercent = (index + part * 0.33 + 0.33) / segments;\r\n        const [startX, startY] = getCoordinatesForPercent(startPercent);\r\n        const [endX, endY] = getCoordinatesForPercent(endPercent);\r\n\r\n        return `M 0 0 L ${startX * 16} ${startY * 16} A 16 16 0 0 1 ${endX * 16} ${endY * 16} z`;\r\n    };\r\n\r\n    const adjustColor = (color, part, index) => {\r\n        if (selectedSegment === index) {\r\n            let lightness = 40 + part * 20; // Ajustează luminozitatea pentru fiecare sub-segment\r\n            return `hsl(${(color.match(/\\d+/g).reduce((a, b) => a + parseInt(b), 0) % 360)}, 100%, ${lightness}%)`;\r\n        } else {\r\n            return 'grey'; // Culoarea pentru segmentele neselectate\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h1 className=\"text-2xl font-bold my-4\">Roata Monocromatică Variată</h1>\r\n            <svg viewBox=\"-18 -18 36 36\" width=\"300px\" height=\"300px\">\r\n                {colors.map((color, index) => (\r\n                    [0, 1, 2].map(part => (\r\n                        <path\r\n                            key={`${index}-${part}`}\r\n                            d={getPathData(index, part)}\r\n                            fill={adjustColor(color, part, index)}\r\n                            onClick={() => setSelectedSegment(index)}\r\n                            style={{ cursor: 'pointer' }}\r\n                        />\r\n                    ))\r\n                ))}\r\n            </svg>\r\n            <p className=\"mt-4\">Selectați un segment pentru a vedea nuanțele diferite ale aceleiași culori. Restul segmentelor vor deveni gri.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RoataMonocromaticaVariata;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}