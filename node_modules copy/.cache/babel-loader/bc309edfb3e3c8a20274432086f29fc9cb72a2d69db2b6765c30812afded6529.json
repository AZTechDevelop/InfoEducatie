{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andreea\\\\infoeducatie\\\\src\\\\Quizz-uri\\\\QuizDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizDetails({\n  quizData\n}) {\n  _s();\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n\n  // Functia pentru a actualiza răspunsurile alese\n  const handleOptionClick = (questionIndex, option) => {\n    setSelectedAnswers({\n      ...selectedAnswers,\n      [questionIndex]: option\n    });\n  };\n\n  // Functia pentru a verifica dacă răspunsul selectat este corect\n  const isAnswerCorrect = questionIndex => {\n    return quizData.questions[questionIndex].raspunsCorect === selectedAnswers[questionIndex];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: quizData.title || \"Detalii Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), quizData.questions.map((question, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.intrebare\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), question.optiuni.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleOptionClick(idx, option),\n        className: `option ${selectedAnswers[idx] === option ? \"selected\" : \"\"}`,\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this)), selectedAnswers[idx] !== undefined && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `answer-feedback ${isAnswerCorrect(idx) ? \"correct\" : \"incorrect\"}`,\n        children: isAnswerCorrect(idx) ? \"Răspuns corect!\" : \"Răspuns greșit!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizDetails, \"P/NqFpgrcd4hC4FsqdCHg152Vks=\");\n_c = QuizDetails;\nexport default QuizDetails;\nvar _c;\n$RefreshReg$(_c, \"QuizDetails\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuizDetails","quizData","_s","selectedAnswers","setSelectedAnswers","handleOptionClick","questionIndex","option","isAnswerCorrect","questions","raspunsCorect","children","title","fileName","_jsxFileName","lineNumber","columnNumber","map","question","idx","className","intrebare","optiuni","index","onClick","undefined","_c","$RefreshReg$"],"sources":["C:/Users/Andreea/infoeducatie/src/Quizz-uri/QuizDetails.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction QuizDetails({ quizData }) {\r\n    const [selectedAnswers, setSelectedAnswers] = useState({});\r\n\r\n    // Functia pentru a actualiza răspunsurile alese\r\n    const handleOptionClick = (questionIndex, option) => {\r\n        setSelectedAnswers({\r\n            ...selectedAnswers,\r\n            [questionIndex]: option\r\n        });\r\n    };\r\n\r\n    // Functia pentru a verifica dacă răspunsul selectat este corect\r\n    const isAnswerCorrect = (questionIndex) => {\r\n        return quizData.questions[questionIndex].raspunsCorect === selectedAnswers[questionIndex];\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>{quizData.title || \"Detalii Quiz\"}</h1>\r\n            {quizData.questions.map((question, idx) => (\r\n                <div key={idx} className=\"question-container\">\r\n                    <p>{question.intrebare}</p>\r\n                    {question.optiuni.map((option, index) => (\r\n                        <button \r\n                            key={index}\r\n                            onClick={() => handleOptionClick(idx, option)}\r\n                            className={`option ${selectedAnswers[idx] === option ? \"selected\" : \"\"}`}\r\n                        >\r\n                            {option}\r\n                        </button>\r\n                    ))}\r\n                    {/* Afisează dacă răspunsul este corect sau greșit după ce utilizatorul selectează o opțiune */}\r\n                    {selectedAnswers[idx] !== undefined && (\r\n                        <p className={`answer-feedback ${isAnswerCorrect(idx) ? \"correct\" : \"incorrect\"}`}>\r\n                            {isAnswerCorrect(idx) ? \"Răspuns corect!\" : \"Răspuns greșit!\"}\r\n                        </p>\r\n                    )}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuizDetails;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE1D;EACA,MAAMQ,iBAAiB,GAAGA,CAACC,aAAa,EAAEC,MAAM,KAAK;IACjDH,kBAAkB,CAAC;MACf,GAAGD,eAAe;MAClB,CAACG,aAAa,GAAGC;IACrB,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMC,eAAe,GAAIF,aAAa,IAAK;IACvC,OAAOL,QAAQ,CAACQ,SAAS,CAACH,aAAa,CAAC,CAACI,aAAa,KAAKP,eAAe,CAACG,aAAa,CAAC;EAC7F,CAAC;EAED,oBACIP,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAKV,QAAQ,CAACW,KAAK,IAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC1Cf,QAAQ,CAACQ,SAAS,CAACQ,GAAG,CAAC,CAACC,QAAQ,EAAEC,GAAG,kBAClCpB,OAAA;MAAeqB,SAAS,EAAC,oBAAoB;MAAAT,QAAA,gBACzCZ,OAAA;QAAAY,QAAA,EAAIO,QAAQ,CAACG;MAAS;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC1BE,QAAQ,CAACI,OAAO,CAACL,GAAG,CAAC,CAACV,MAAM,EAAEgB,KAAK,kBAChCxB,OAAA;QAEIyB,OAAO,EAAEA,CAAA,KAAMnB,iBAAiB,CAACc,GAAG,EAAEZ,MAAM,CAAE;QAC9Ca,SAAS,EAAG,UAASjB,eAAe,CAACgB,GAAG,CAAC,KAAKZ,MAAM,GAAG,UAAU,GAAG,EAAG,EAAE;QAAAI,QAAA,EAExEJ;MAAM,GAJFgB,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKN,CACX,CAAC,EAEDb,eAAe,CAACgB,GAAG,CAAC,KAAKM,SAAS,iBAC/B1B,OAAA;QAAGqB,SAAS,EAAG,mBAAkBZ,eAAe,CAACW,GAAG,CAAC,GAAG,SAAS,GAAG,WAAY,EAAE;QAAAR,QAAA,EAC7EH,eAAe,CAACW,GAAG,CAAC,GAAG,iBAAiB,GAAG;MAAiB;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CACN;IAAA,GAhBKG,GAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiBR,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACd,EAAA,CAzCQF,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AA2CpB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}