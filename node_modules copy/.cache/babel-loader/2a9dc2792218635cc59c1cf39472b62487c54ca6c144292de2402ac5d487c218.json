{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andreea\\\\infoeducatie\\\\src\\\\Teorie\\\\componente\\\\RoataMonocromatica.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoataMonocromaticaVariata() {\n  _s();\n  const [selectedSegment, setSelectedSegment] = useState(null);\n  const segments = 4; // Definim 4 segmente principale\n  const subSegments = 3; // Fiecare segment principal va avea 3 sub-segmente\n  const colors = ['#E63946', '#F4A261', '#E9C46A', '#2A9D8F', '#264653', '#2B2D42', '#8D99AE', '#EDF2F4', '#EF233C', '#D90429', '#06D6A0', '#118AB2'];\n  useEffect(() => {\n    // Selectăm un segment aleatoriu\n    setSelectedSegment(Math.floor(Math.random() * segments));\n  }, []);\n  const getCoordinatesForPercent = percent => {\n    const x = Math.cos(2 * Math.PI * percent);\n    const y = Math.sin(2 * Math.PI * percent);\n    return [x, y];\n  };\n  const getPathData = (index, subIndex) => {\n    const totalSubSegments = segments * subSegments;\n    const startPercent = (index * subSegments + subIndex) / totalSubSegments;\n    const endPercent = (index * subSegments + subIndex + 1) / totalSubSegments;\n    const [startX, startY] = getCoordinatesForPercent(startPercent);\n    const [endX, endY] = getCoordinatesForPercent(endPercent);\n    return `M 0 0 L ${startX * 16} ${startY * 16} A 16 16 0 0 1 ${endX * 16} ${endY * 16} z`;\n  };\n  const adjustColor = (color, index) => {\n    if (selectedSegment === index) {\n      // Returnează culoarea normală dacă este segmentul selectat\n      return color;\n    } else {\n      // Returnează gri pentru neselectate\n      return 'grey';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold my-4\",\n      children: \"Roata Monocromatic\\u0103 Variat\\u0103\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: \"-18 -18 36 36\",\n      width: \"300px\",\n      height: \"300px\",\n      children: Array.from({\n        length: segments\n      }).map((_, index) => Array.from({\n        length: subSegments\n      }).map((_, subIndex) => /*#__PURE__*/_jsxDEV(\"path\", {\n        d: getPathData(index, subIndex),\n        fill: adjustColor(colors[index * subSegments + subIndex], index),\n        onClick: () => setSelectedSegment(index),\n        style: {\n          cursor: 'pointer'\n        }\n      }, `${index}-${subIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4\",\n      children: \"Selecta\\u021Bi un segment pentru a vedea nuan\\u021Bele diferite ale aceleia\\u0219i culori. Restul segmentelor vor deveni gri.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(RoataMonocromaticaVariata, \"TP0ZmG4VdFS0Tplfvh2/vw9KbQU=\");\n_c = RoataMonocromaticaVariata;\nexport default RoataMonocromaticaVariata;\nvar _c;\n$RefreshReg$(_c, \"RoataMonocromaticaVariata\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RoataMonocromaticaVariata","_s","selectedSegment","setSelectedSegment","segments","subSegments","colors","Math","floor","random","getCoordinatesForPercent","percent","x","cos","PI","y","sin","getPathData","index","subIndex","totalSubSegments","startPercent","endPercent","startX","startY","endX","endY","adjustColor","color","className","children","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","width","height","Array","from","length","map","_","d","fill","onClick","style","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Andreea/infoeducatie/src/Teorie/componente/RoataMonocromatica.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction RoataMonocromaticaVariata() {\r\n    const [selectedSegment, setSelectedSegment] = useState(null);\r\n    const segments = 4;  // Definim 4 segmente principale\r\n    const subSegments = 3;  // Fiecare segment principal va avea 3 sub-segmente\r\n    const colors = [\r\n        '#E63946', '#F4A261', '#E9C46A', '#2A9D8F',\r\n        '#264653', '#2B2D42', '#8D99AE', '#EDF2F4',\r\n        '#EF233C', '#D90429', '#06D6A0', '#118AB2'\r\n    ];\r\n    useEffect(() => {\r\n        // Selectăm un segment aleatoriu\r\n        setSelectedSegment(Math.floor(Math.random() * segments));\r\n    }, []);\r\n\r\n    const getCoordinatesForPercent = (percent) => {\r\n        const x = Math.cos(2 * Math.PI * percent);\r\n        const y = Math.sin(2 * Math.PI * percent);\r\n        return [x, y];\r\n    };\r\n\r\n    const getPathData = (index, subIndex) => {\r\n        const totalSubSegments = segments * subSegments;\r\n        const startPercent = (index * subSegments + subIndex) / totalSubSegments;\r\n        const endPercent = (index * subSegments + subIndex + 1) / totalSubSegments;\r\n        const [startX, startY] = getCoordinatesForPercent(startPercent);\r\n        const [endX, endY] = getCoordinatesForPercent(endPercent);\r\n\r\n        return `M 0 0 L ${startX * 16} ${startY * 16} A 16 16 0 0 1 ${endX * 16} ${endY * 16} z`;\r\n    };\r\n\r\n    const adjustColor = (color, index) => {\r\n        if (selectedSegment === index) {\r\n            // Returnează culoarea normală dacă este segmentul selectat\r\n            return color;\r\n        } else {\r\n            // Returnează gri pentru neselectate\r\n            return 'grey';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h1 className=\"text-2xl font-bold my-4\">Roata Monocromatică Variată</h1>\r\n            <svg viewBox=\"-18 -18 36 36\" width=\"300px\" height=\"300px\">\r\n                {Array.from({ length: segments }).map((_, index) => (\r\n                    Array.from({ length: subSegments }).map((_, subIndex) => (\r\n                        <path\r\n                            key={`${index}-${subIndex}`}\r\n                            d={getPathData(index, subIndex)}\r\n                            fill={adjustColor(colors[index * subSegments + subIndex], index)}\r\n                            onClick={() => setSelectedSegment(index)}\r\n                            style={{ cursor: 'pointer' }}\r\n                        />\r\n                    ))\r\n                ))}\r\n            </svg>\r\n            <p className=\"mt-4\">Selectați un segment pentru a vedea nuanțele diferite ale aceleiași culori. Restul segmentelor vor deveni gri.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RoataMonocromaticaVariata;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}