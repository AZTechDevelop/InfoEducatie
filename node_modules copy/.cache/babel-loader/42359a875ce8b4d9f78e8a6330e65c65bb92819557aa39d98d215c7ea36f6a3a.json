{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andreea\\\\infoeducatie\\\\src\\\\Teorie\\\\componente\\\\RoataMonocromatica.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoataMonocromaticaVariata() {\n  _s();\n  const [selectedSegment, setSelectedSegment] = useState(null);\n  const segments = 8;\n  const colors = ['#E63946',\n  // Red Salsa\n  '#F4A261',\n  // Sandy Brown\n  '#E9C46A',\n  // Orange Yellow Crayola\n  '#2A9D8F',\n  // Persian Green\n  '#264653',\n  // Charleston Green\n  '#2B2D42',\n  // Space Cadet\n  '#8D99AE',\n  // Manatee\n  '#EDF2F4',\n  // Cultured\n  '#EF233C',\n  // Imperial Red\n  '#D90429',\n  // Amaranth Red\n  '#06D6A0',\n  // Medium Aquamarine\n  '#118AB2' // Blue NCS\n  ];\n  const getCoordinatesForPercent = percent => {\n    const x = Math.cos(2 * Math.PI * percent);\n    const y = Math.sin(2 * Math.PI * percent);\n    return [x, y];\n  };\n  const getPathData = (index, lightnessFactor) => {\n    const startPercent = (index + lightnessFactor * 0.33) / segments;\n    const endPercent = (index + lightnessFactor * 0.33 + 0.33) / segments;\n    const [startX, startY] = getCoordinatesForPercent(startPercent);\n    const [endX, endY] = getCoordinatesForPercent(endPercent);\n    return `M 0 0 L ${startX * 16} ${startY * 16} A 16 16 0 0 1 ${endX * 16} ${endY * 16} z`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold my-4\",\n      children: \"Roata Monocromatic\\u0103 Variat\\u0103\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: \"-18 -18 36 36\",\n      width: \"300px\",\n      height: \"300px\",\n      children: colors.map((color, index) => [0, 1, 2].map(lightnessFactor => /*#__PURE__*/_jsxDEV(\"path\", {\n        d: getPathData(index, lightnessFactor),\n        fill: selectedSegment === index ? `hsl(${color.match(/\\d+/g).reduce((a, b) => a + parseInt(b), 0) % 360},100%,${50 + lightnessFactor * 15}%)` : 'grey',\n        onClick: () => setSelectedSegment(index),\n        style: {\n          cursor: 'pointer',\n          opacity: selectedSegment === null || selectedSegment === index ? 1 : 0.3\n        }\n      }, `${index}-${lightnessFactor}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4\",\n      children: \"Selecta\\u021Bi un segment pentru a eviden\\u021Bia varia\\u021Biile de culoare, iar restul segmentelor vor deveni gri.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(RoataMonocromaticaVariata, \"OPQIMN4cnigIIHZL06aYaW9XC7A=\");\n_c = RoataMonocromaticaVariata;\nexport default RoataMonocromaticaVariata;\nvar _c;\n$RefreshReg$(_c, \"RoataMonocromaticaVariata\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RoataMonocromaticaVariata","_s","selectedSegment","setSelectedSegment","segments","colors","getCoordinatesForPercent","percent","x","Math","cos","PI","y","sin","getPathData","index","lightnessFactor","startPercent","endPercent","startX","startY","endX","endY","className","children","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","width","height","map","color","d","fill","match","reduce","a","b","parseInt","onClick","style","cursor","opacity","_c","$RefreshReg$"],"sources":["C:/Users/Andreea/infoeducatie/src/Teorie/componente/RoataMonocromatica.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction RoataMonocromaticaVariata() {\r\n    const [selectedSegment, setSelectedSegment] = useState(null);\r\n    const segments = 8;\r\n    const colors = [\r\n        '#E63946', // Red Salsa\r\n        '#F4A261', // Sandy Brown\r\n        '#E9C46A', // Orange Yellow Crayola\r\n        '#2A9D8F', // Persian Green\r\n        '#264653', // Charleston Green\r\n        '#2B2D42', // Space Cadet\r\n        '#8D99AE', // Manatee\r\n        '#EDF2F4', // Cultured\r\n        '#EF233C', // Imperial Red\r\n        '#D90429', // Amaranth Red\r\n        '#06D6A0', // Medium Aquamarine\r\n        '#118AB2'  // Blue NCS\r\n    ];\r\n    \r\n\r\n   \r\n    const getCoordinatesForPercent = (percent) => {\r\n        const x = Math.cos(2 * Math.PI * percent);\r\n        const y = Math.sin(2 * Math.PI * percent);\r\n        return [x, y];\r\n    };\r\n\r\n    \r\n    const getPathData = (index, lightnessFactor) => {\r\n        const startPercent = (index + lightnessFactor * 0.33) / segments;\r\n        const endPercent = (index + lightnessFactor * 0.33 + 0.33) / segments;\r\n        const [startX, startY] = getCoordinatesForPercent(startPercent);\r\n        const [endX, endY] = getCoordinatesForPercent(endPercent);\r\n\r\n        return `M 0 0 L ${startX * 16} ${startY * 16} A 16 16 0 0 1 ${endX * 16} ${endY * 16} z`;\r\n    };\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h1 className=\"text-2xl font-bold my-4\">Roata Monocromatică Variată</h1>\r\n            <svg viewBox=\"-18 -18 36 36\" width=\"300px\" height=\"300px\">\r\n                {colors.map((color, index) => (\r\n                    [0, 1, 2].map(lightnessFactor => (\r\n                        <path\r\n                            key={`${index}-${lightnessFactor}`}\r\n                            d={getPathData(index, lightnessFactor)}\r\n                            fill={selectedSegment === index ? `hsl(${(color.match(/\\d+/g).reduce((a, b) => a + parseInt(b), 0) % 360)},100%,${50 + lightnessFactor * 15}%)` : 'grey'}\r\n                            onClick={() => setSelectedSegment(index)}\r\n                            style={{ cursor: 'pointer', opacity: selectedSegment === null || selectedSegment === index ? 1 : 0.3 }}\r\n                        />\r\n                    ))\r\n                ))}\r\n            </svg>\r\n            <p className=\"mt-4\">Selectați un segment pentru a evidenția variațiile de culoare, iar restul segmentelor vor deveni gri.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RoataMonocromaticaVariata;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}