{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andreea\\\\infoeducatie\\\\src\\\\Teorie\\\\Sistemele.jsx\";\nimport ButtonsComponent from \"./buttonComponents\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Sistemele() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"flex h-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/6 bg-gray-600 p-4 overflow-auto\",\n        children: /*#__PURE__*/_jsxDEV(ButtonsComponent, {\n          currentButton: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-5/6 p-4 flex flex-col bg-gray-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"1.RGB (Red, Green, Blue)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"RGB este un model de culoare aditiv utilizat \\xEEn principal pentru afi\\u0219area imaginilor \\xEEn dispozitive electronice precum monitoare, televizoare \\u0219i ecrane de telefon.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Acest sistem se bazeaz\\u0103 pe teoria c\\u0103 orice culoare poate fi creat\\u0103 prin combinarea luminii ro\\u0219ii, verzi \\u0219i albastre \\xEEn propor\\u021Bii variate. Culorile sunt create prin iluminarea subpixelilor. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"RGB este un model aditiv, ceea ce \\xEEnseamn\\u0103 c\\u0103 culorile sunt create prin combinarea luminii. Combina\\u021Bia maxim\\u0103 a celor trei culori (ro\\u0219u, verde, albastru) produce alb. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Fiecare culoare \\xEEn sistemul RGB este reprezentat\\u0103 printr-o valoare \\xEEntre 0 \\u0219i 255, unde 0 \\xEEnseamn\\u0103 absen\\u021Ba complet\\u0103 a culorii respective \\u0219i 255 \\xEEnseamn\\u0103 prezen\\u021Ba complet\\u0103 a culorii. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"RGBA (Red, Green, Blue, Alpha)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"RGBA extinde modelul RGB prin ad\\u0103ugarea unui al patrulea component, alpha, care gestioneaz\\u0103 transparen\\u021Ba culorii. Alpha poate lua valori de la 0 (complet transparent) la 1 (complet opac). \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Alpha controleaz\\u0103 nivelul de opacitate al culorii, permi\\u021B\\xE2nd suprapunerea culorilor pe un fundal care poate fi v\\u0103zut prin culoarea par\\u021Bial transparent\\u0103. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Valorile alpha sunt adesea reprezentate \\xEEn procente sau de la 0 la 255, similar cu componentele RGB. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Este folosit pentru designul web \\u0219i grafic\\u0103, unde este necesar\\u0103 suprapunerea elementelor f\\u0103r\\u0103 a ascunde complet fundalul. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Color Combiner Tool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n}\n_c = Sistemele;\nvar _c;\n$RefreshReg$(_c, \"Sistemele\");","map":{"version":3,"names":["ButtonsComponent","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Sistemele","children","class","className","currentButton","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Andreea/infoeducatie/src/Teorie/Sistemele.jsx"],"sourcesContent":["import ButtonsComponent from \"./buttonComponents\"\r\nimport { useState } from \"react\";\r\nexport default function Sistemele(){\r\n    \r\n    return(\r\n        <>\r\n       <div class=\"flex h-auto\">\r\n         <div className=\"w-1/6 bg-gray-600 p-4 overflow-auto\">\r\n                <ButtonsComponent currentButton={1} />\r\n            </div>\r\n            <div className=\"w-5/6 p-4 flex flex-col bg-gray-100\">\r\n\r\n        <h2>1.RGB (Red, Green, Blue)</h2>\r\n        <p>\r\n        RGB este un model de culoare aditiv utilizat în principal pentru afișarea imaginilor în dispozitive electronice precum monitoare, televizoare și ecrane de telefon. \r\n        </p>\r\n        <p>\r\n        Acest sistem se bazează pe teoria că orice culoare poate fi creată prin combinarea luminii roșii, verzi și albastre în proporții variate. \r\n        Culorile sunt create prin iluminarea subpixelilor. </p>\r\n    <p>\r\n    RGB este un model aditiv, ceea ce înseamnă că culorile sunt create prin combinarea luminii. Combinația maximă a celor trei culori (roșu, verde, albastru) produce alb. </p>\r\n    <p>Fiecare culoare în sistemul RGB este reprezentată printr-o valoare între 0 și 255, unde 0 înseamnă absența completă a culorii respective și 255 înseamnă prezența completă a culorii. </p>\r\n\r\n    <h2>RGBA (Red, Green, Blue, Alpha)</h2>\r\n   <p>RGBA extinde modelul RGB prin adăugarea unui al patrulea component, alpha, care gestionează transparența culorii. Alpha poate lua valori de la 0 (complet transparent) la 1 (complet opac). </p>\r\n    <p> Alpha controlează nivelul de opacitate al culorii, permițând suprapunerea culorilor pe un fundal care poate fi văzut prin culoarea parțial transparentă. </p>\r\n    <p>Valorile alpha sunt adesea reprezentate în procente sau de la 0 la 255, similar cu componentele RGB. </p>\r\n  <p>Este folosit pentru designul web și grafică, unde este necesară suprapunerea elementelor fără a ascunde complet fundalul. </p>\r\n\r\n\r\n\r\n            <h2>Color Combiner Tool</h2>\r\n            \r\n            </div>\r\n           \r\n            </div>\r\n\r\n        </>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,gBAAgB,MAAM,oBAAoB;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACjC,eAAe,SAASC,SAASA,CAAA,EAAE;EAE/B,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACDJ,OAAA;MAAKK,KAAK,EAAC,aAAa;MAAAD,QAAA,gBACtBJ,OAAA;QAAKM,SAAS,EAAC,qCAAqC;QAAAF,QAAA,eAC7CJ,OAAA,CAACH,gBAAgB;UAACU,aAAa,EAAE;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACNX,OAAA;QAAKM,SAAS,EAAC,qCAAqC;QAAAF,QAAA,gBAExDJ,OAAA;UAAAI,QAAA,EAAI;QAAwB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjCX,OAAA;UAAAI,QAAA,EAAG;QAEH;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJX,OAAA;UAAAI,QAAA,EAAG;QAEgD;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC3DX,OAAA;UAAAI,QAAA,EAAG;QACoK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC3KX,OAAA;UAAAI,QAAA,EAAG;QAAsL;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAE7LX,OAAA;UAAAI,QAAA,EAAI;QAA8B;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxCX,OAAA;UAAAI,QAAA,EAAG;QAA4L;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAClMX,OAAA;UAAAI,QAAA,EAAG;QAA0J;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACjKX,OAAA;UAAAI,QAAA,EAAG;QAAqG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC9GX,OAAA;UAAAI,QAAA,EAAG;QAA0H;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAIvHX,OAAA;UAAAI,QAAA,EAAI;QAAmB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED;EAAC,gBAER,CAAC;AAEX;AAACC,EAAA,GArCuBT,SAAS;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}