{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";function RoataCulorilorAnaloge(){const[selectedSegment,setSelectedSegment]=useState(null);const segments=12;useEffect(()=>{setSelectedSegment(Math.floor(Math.random()*4)*3);},[]);const colors=[// Roșu \n'hsl(345, 80%, 50%)','hsl(0, 80%, 50%)','hsl(15, 80%, 50%)',// Albastru \n'hsl(215, 80%, 50%)','hsl(240, 80%, 50%)','hsl(265, 80%, 50%)',// Verde \n'hsl(95, 80%, 50%)','hsl(120, 80%, 50%)','hsl(145, 80%, 50%)',// Mov \n'hsl(285, 80%, 50%)','hsl(300, 60%, 50%)','hsl(315, 80%, 50%)'];const getCoordinatesForPercent=percent=>{const x=Math.cos(2*Math.PI*percent);const y=Math.sin(2*Math.PI*percent);return[x,y];};const getPathData=(index,segments)=>{const startPercent=index/segments;const endPercent=(index+1)/segments;const[startX,startY]=getCoordinatesForPercent(startPercent);const[endX,endY]=getCoordinatesForPercent(endPercent);return\"M 0 0 L \".concat(startX*16,\" \").concat(startY*16,\" A 16 16 0 0 1 \").concat(endX*16,\" \").concat(endY*16,\" z\");};const adjustColor=(color,index)=>{const groupStartIndex=Math.floor(selectedSegment/3)*3;if(index>=groupStartIndex&&index<groupStartIndex+3){return color;}else{return'grey';}};return/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(\"svg\",{viewBox:\"-18 -18 36 36\",width:\"200px\",height:\"200px\",children:colors.map((color,index)=>/*#__PURE__*/_jsx(\"path\",{d:getPathData(index,segments),fill:adjustColor(color,index),onClick:()=>setSelectedSegment(index),style:{cursor:'pointer'}},index))})});}export default RoataCulorilorAnaloge;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","RoataCulorilorAnaloge","selectedSegment","setSelectedSegment","segments","Math","floor","random","colors","getCoordinatesForPercent","percent","x","cos","PI","y","sin","getPathData","index","startPercent","endPercent","startX","startY","endX","endY","concat","adjustColor","color","groupStartIndex","className","children","viewBox","width","height","map","d","fill","onClick","style","cursor"],"sources":["C:/Users/Andreea/infoeducatie/src/Teorie/componente/RoataAnaloaga.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction RoataCulorilorAnaloge() {\r\n    const [selectedSegment, setSelectedSegment] = useState(null);\r\n    const segments = 12; \r\n\r\n    useEffect(() => {\r\n       \r\n        setSelectedSegment(Math.floor(Math.random() * 4) * 3); \r\n    }, []);\r\n\r\n    const colors = [\r\n       \r\n        // Roșu \r\n        'hsl(345, 80%, 50%)', 'hsl(0, 80%, 50%)', 'hsl(15, 80%, 50%)',\r\n         // Albastru \r\n         'hsl(215, 80%, 50%)', 'hsl(240, 80%, 50%)', 'hsl(265, 80%, 50%)',\r\n         \r\n        \r\n        // Verde \r\n        'hsl(95, 80%, 50%)', 'hsl(120, 80%, 50%)', 'hsl(145, 80%, 50%)',\r\n        // Mov \r\n        'hsl(285, 80%, 50%)', 'hsl(300, 60%, 50%)', 'hsl(315, 80%, 50%)'\r\n       \r\n        \r\n    ];\r\n    \r\n\r\n    const getCoordinatesForPercent = (percent) => {\r\n        const x = Math.cos(2 * Math.PI * percent);\r\n        const y = Math.sin(2 * Math.PI * percent);\r\n        return [x, y];\r\n    };\r\n\r\n    const getPathData = (index, segments) => {\r\n        const startPercent = index / segments;\r\n        const endPercent = (index + 1) / segments;\r\n        const [startX, startY] = getCoordinatesForPercent(startPercent);\r\n        const [endX, endY] = getCoordinatesForPercent(endPercent);\r\n\r\n        return `M 0 0 L ${startX * 16} ${startY * 16} A 16 16 0 0 1 ${endX * 16} ${endY * 16} z`;\r\n    };\r\n\r\n    const adjustColor = (color, index) => {\r\n      \r\n        const groupStartIndex = Math.floor(selectedSegment / 3) * 3;\r\n        if (index >= groupStartIndex && index < groupStartIndex + 3) {\r\n            return color; \r\n        } else {\r\n            return 'grey'; \r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            \r\n            <svg viewBox=\"-18 -18 36 36\" width=\"200px\" height=\"200px\">\r\n                {colors.map((color, index) => (\r\n                    <path\r\n                        key={index}\r\n                        d={getPathData(index, segments)}\r\n                        fill={adjustColor(color, index)}\r\n                        onClick={() => setSelectedSegment(index)}\r\n                        style={{ cursor: 'pointer' }}\r\n                    />\r\n                ))}\r\n            </svg>\r\n          \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RoataCulorilorAnaloge;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}